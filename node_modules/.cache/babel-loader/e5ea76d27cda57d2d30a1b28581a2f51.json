{"ast":null,"code":"// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// ** Axios Imports\nimport axios from 'axios';\nexport const getUserProfile = createAsyncThunk('appChat/getTasks', async () => {\n  const response = await axios.get('/apps/chat/users/profile-user');\n  return response.data;\n});\nexport const getChatContacts = createAsyncThunk('appChat/getChatContacts', async () => {\n  const response = await axios.get('/apps/chat/chats-and-contacts');\n  return response.data;\n});\nexport const selectChat = createAsyncThunk('appChat/selectChat', async (id, _ref) => {\n  let {\n    dispatch\n  } = _ref;\n  const response = await axios.get('/apps/chat/get-chat', {\n    id\n  });\n  await dispatch(getChatContacts());\n  return response.data;\n});\nexport const sendMsg = createAsyncThunk('appChat/sendMsg', async (obj, _ref2) => {\n  let {\n    dispatch\n  } = _ref2;\n  const response = await axios.post('/apps/chat/send-msg', {\n    obj\n  });\n  await dispatch(selectChat(obj.contact.id));\n  return response.data;\n});\nexport const appChatSlice = createSlice({\n  name: 'appChat',\n  initialState: {\n    chats: [],\n    contacts: [],\n    userProfile: {},\n    selectedUser: {}\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getUserProfile.fulfilled, (state, action) => {\n      state.userProfile = action.payload;\n    }).addCase(getChatContacts.fulfilled, (state, action) => {\n      state.chats = action.payload.chatsContacts;\n      state.contacts = action.payload.contacts;\n    }).addCase(selectChat.fulfilled, (state, action) => {\n      state.selectedUser = action.payload;\n    });\n  }\n});\nexport default appChatSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","getUserProfile","response","get","data","getChatContacts","selectChat","id","dispatch","sendMsg","obj","post","contact","appChatSlice","name","initialState","chats","contacts","userProfile","selectedUser","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","chatsContacts","reducer"],"sources":["/Users/admin/full-version/src/views/apps/chat/store/index.js"],"sourcesContent":["// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\n// ** Axios Imports\nimport axios from 'axios'\n\nexport const getUserProfile = createAsyncThunk('appChat/getTasks', async () => {\n  const response = await axios.get('/apps/chat/users/profile-user')\n  return response.data\n})\n\nexport const getChatContacts = createAsyncThunk('appChat/getChatContacts', async () => {\n  const response = await axios.get('/apps/chat/chats-and-contacts')\n  return response.data\n})\n\nexport const selectChat = createAsyncThunk('appChat/selectChat', async (id, { dispatch }) => {\n  const response = await axios.get('/apps/chat/get-chat', { id })\n  await dispatch(getChatContacts())\n  return response.data\n})\n\nexport const sendMsg = createAsyncThunk('appChat/sendMsg', async (obj, { dispatch }) => {\n  const response = await axios.post('/apps/chat/send-msg', { obj })\n  await dispatch(selectChat(obj.contact.id))\n  return response.data\n})\n\nexport const appChatSlice = createSlice({\n  name: 'appChat',\n  initialState: {\n    chats: [],\n    contacts: [],\n    userProfile: {},\n    selectedUser: {}\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(getUserProfile.fulfilled, (state, action) => {\n        state.userProfile = action.payload\n      })\n      .addCase(getChatContacts.fulfilled, (state, action) => {\n        state.chats = action.payload.chatsContacts\n        state.contacts = action.payload.contacts\n      })\n      .addCase(selectChat.fulfilled, (state, action) => {\n        state.selectedUser = action.payload\n      })\n  }\n})\n\nexport default appChatSlice.reducer\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;AACA,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,cAAc,GAAGF,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EAC7E,MAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,+BAA+B,CAAC;EACjE,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEF,OAAO,MAAMC,eAAe,GAAGN,gBAAgB,CAAC,yBAAyB,EAAE,YAAY;EACrF,MAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,+BAA+B,CAAC;EACjE,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEF,OAAO,MAAME,UAAU,GAAGP,gBAAgB,CAAC,oBAAoB,EAAE,OAAOQ,EAAE,WAAmB;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACtF,MAAMN,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,qBAAqB,EAAE;IAAEI;EAAG,CAAC,CAAC;EAC/D,MAAMC,QAAQ,CAACH,eAAe,EAAE,CAAC;EACjC,OAAOH,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEF,OAAO,MAAMK,OAAO,GAAGV,gBAAgB,CAAC,iBAAiB,EAAE,OAAOW,GAAG,YAAmB;EAAA,IAAjB;IAAEF;EAAS,CAAC;EACjF,MAAMN,QAAQ,GAAG,MAAMF,KAAK,CAACW,IAAI,CAAC,qBAAqB,EAAE;IAAED;EAAI,CAAC,CAAC;EACjE,MAAMF,QAAQ,CAACF,UAAU,CAACI,GAAG,CAACE,OAAO,CAACL,EAAE,CAAC,CAAC;EAC1C,OAAOL,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEF,OAAO,MAAMS,YAAY,GAAGf,WAAW,CAAC;EACtCgB,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,CAAC,CAAC;IACfC,YAAY,EAAE,CAAC;EACjB,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAEC,OAAO,IAAI;IACxBA,OAAO,CACJC,OAAO,CAACtB,cAAc,CAACuB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACpDD,KAAK,CAACP,WAAW,GAAGQ,MAAM,CAACC,OAAO;IACpC,CAAC,CAAC,CACDJ,OAAO,CAAClB,eAAe,CAACmB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACrDD,KAAK,CAACT,KAAK,GAAGU,MAAM,CAACC,OAAO,CAACC,aAAa;MAC1CH,KAAK,CAACR,QAAQ,GAAGS,MAAM,CAACC,OAAO,CAACV,QAAQ;IAC1C,CAAC,CAAC,CACDM,OAAO,CAACjB,UAAU,CAACkB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACN,YAAY,GAAGO,MAAM,CAACC,OAAO;IACrC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAed,YAAY,CAACgB,OAAO"},"metadata":{},"sourceType":"module"}