{"ast":null,"code":"var _jsxFileName = \"/Users/admin/full-version/src/views/extensions/drag-and-drop/DndClone.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { useState } from 'react';\n\n// ** Third Party Components\nimport classnames from 'classnames';\nimport { ReactSortable } from 'react-sortablejs';\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL';\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, Badge } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DndClone = () => {\n  _s();\n  // ** State\n  const [isRtl] = useRTL();\n  const source1 = [{\n    text: 'Youtube',\n    color: 'light-secondary'\n  }, {\n    text: 'Facebook',\n    color: 'light-primary'\n  }, {\n    text: 'Google',\n    color: 'light-success'\n  }, {\n    text: 'Instagram',\n    color: 'light-danger'\n  }, {\n    text: 'Twitter',\n    color: 'light-info'\n  }, {\n    text: 'Discord',\n    color: 'light-warning'\n  }];\n  const source2 = [{\n    text: 'Github',\n    color: 'light-secondary'\n  }, {\n    text: 'Gitlab',\n    color: 'light-primary'\n  }, {\n    text: 'Slack',\n    color: 'light-success'\n  }, {\n    text: 'Pinterest',\n    color: 'light-danger'\n  }, {\n    text: 'Tinder',\n    color: 'light-info'\n  }, {\n    text: 'Amazon',\n    color: 'light-warning'\n  }];\n  const [list, setList] = useState(source1);\n  const [list2, setList2] = useState(source2);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h4\",\n        children: \"Clone List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(CardText, {\n        children: [\"Add \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"pull:clone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), \" with your group prop to clone items.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          sm: \"12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"my-1\",\n            children: \"Badge Source 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReactSortable, {\n            list: list,\n            setList: setList,\n            group: {\n              name: 'shared-badge-group',\n              pull: 'clone'\n            },\n            className: classnames('demo-inline-spacing sortable', {\n              'flex-row-reverse': isRtl\n            }),\n            children: list.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(Badge, {\n                className: \"draggable\",\n                color: item.color,\n                pill: true,\n                children: item.text\n              }, `${item.text}-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          sm: \"12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"my-1\",\n            children: \"Badge Source 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReactSortable, {\n            list: list2,\n            setList: setList2,\n            group: {\n              name: 'shared-badge-group',\n              pull: 'clone'\n            },\n            className: classnames('demo-inline-spacing sortable', {\n              'flex-row-reverse': isRtl\n            }),\n            children: list2.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(Badge, {\n                className: \"draggable\",\n                color: item.color,\n                pill: true,\n                children: item.text\n              }, `${item.text}-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(DndClone, \"hgYcl/KIFCcBziu+0w1Vs8hJSnA=\", false, function () {\n  return [useRTL];\n});\n_c = DndClone;\nexport default DndClone;\nvar _c;\n$RefreshReg$(_c, \"DndClone\");","map":{"version":3,"names":["useState","classnames","ReactSortable","useRTL","Card","CardHeader","CardTitle","CardBody","CardText","Row","Col","Badge","DndClone","isRtl","source1","text","color","source2","list","setList","list2","setList2","name","pull","map","item","index"],"sources":["/Users/admin/full-version/src/views/extensions/drag-and-drop/DndClone.js"],"sourcesContent":["// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ReactSortable } from 'react-sortablejs'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, Badge } from 'reactstrap'\n\nconst DndClone = () => {\n  // ** State\n  const [isRtl] = useRTL()\n\n  const source1 = [\n    {\n      text: 'Youtube',\n      color: 'light-secondary'\n    },\n    {\n      text: 'Facebook',\n      color: 'light-primary'\n    },\n    {\n      text: 'Google',\n      color: 'light-success'\n    },\n    {\n      text: 'Instagram',\n      color: 'light-danger'\n    },\n    {\n      text: 'Twitter',\n      color: 'light-info'\n    },\n    {\n      text: 'Discord',\n      color: 'light-warning'\n    }\n  ]\n  const source2 = [\n    {\n      text: 'Github',\n      color: 'light-secondary'\n    },\n    {\n      text: 'Gitlab',\n      color: 'light-primary'\n    },\n    {\n      text: 'Slack',\n      color: 'light-success'\n    },\n    {\n      text: 'Pinterest',\n      color: 'light-danger'\n    },\n    {\n      text: 'Tinder',\n      color: 'light-info'\n    },\n    {\n      text: 'Amazon',\n      color: 'light-warning'\n    }\n  ]\n\n  const [list, setList] = useState(source1)\n  const [list2, setList2] = useState(source2)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Clone List</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <CardText>\n          Add <code>pull:clone</code> with your group prop to clone items.\n        </CardText>\n        <Row>\n          <Col md='6' sm='12'>\n            <h4 className='my-1'>Badge Source 1</h4>\n            <ReactSortable\n              list={list}\n              setList={setList}\n              group={{ name: 'shared-badge-group', pull: 'clone' }}\n              className={classnames('demo-inline-spacing sortable', {\n                'flex-row-reverse': isRtl\n              })}\n            >\n              {list.map((item, index) => {\n                return (\n                  <Badge className='draggable' key={`${item.text}-${index}`} color={item.color} pill>\n                    {item.text}\n                  </Badge>\n                )\n              })}\n            </ReactSortable>\n          </Col>\n          <Col md='6' sm='12'>\n            <h4 className='my-1'>Badge Source 2</h4>\n            <ReactSortable\n              list={list2}\n              setList={setList2}\n              group={{ name: 'shared-badge-group', pull: 'clone' }}\n              className={classnames('demo-inline-spacing sortable', {\n                'flex-row-reverse': isRtl\n              })}\n            >\n              {list2.map((item, index) => {\n                return (\n                  <Badge className='draggable' key={`${item.text}-${index}`} color={item.color} pill>\n                    {item.text}\n                  </Badge>\n                )\n              })}\n            </ReactSortable>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default DndClone\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}