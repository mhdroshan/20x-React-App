{"ast":null,"code":"var _jsxFileName = \"/Users/admin/full-version/src/views/ui-elements/cards/statistics/OrdersBarChart.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { useEffect, useState } from 'react';\n\n// ** Third Party Components\nimport axios from 'axios';\n\n// ** Custom Components\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrdersBarChart = _ref => {\n  _s();\n  let {\n    warning\n  } = _ref;\n  // ** State\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    axios.get('/card/card-statistics/orders-bar-chart').then(res => setData(res.data));\n    return () => setData(null);\n  }, []);\n  const options = {\n    chart: {\n      stacked: true,\n      toolbar: {\n        show: false\n      }\n    },\n    grid: {\n      show: false,\n      padding: {\n        left: 0,\n        right: 0,\n        top: -15,\n        bottom: -15\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '20%',\n        borderRadius: [0, 5],\n        colors: {\n          backgroundBarColors: ['#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3'],\n          backgroundBarRadius: 5\n        }\n      }\n    },\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    colors: [warning],\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  };\n  return data !== null ? /*#__PURE__*/_jsxDEV(TinyChartStats, {\n    height: 70,\n    type: \"bar\",\n    options: options,\n    title: data.title,\n    stats: data.statistics,\n    series: data.series\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this) : null;\n};\n_s(OrdersBarChart, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = OrdersBarChart;\nexport default OrdersBarChart;\nvar _c;\n$RefreshReg$(_c, \"OrdersBarChart\");","map":{"version":3,"names":["useEffect","useState","axios","TinyChartStats","OrdersBarChart","warning","data","setData","get","then","res","options","chart","stacked","toolbar","show","grid","padding","left","right","top","bottom","plotOptions","bar","horizontal","columnWidth","borderRadius","colors","backgroundBarColors","backgroundBarRadius","legend","dataLabels","enabled","xaxis","labels","axisBorder","axisTicks","yaxis","tooltip","x","title","statistics","series"],"sources":["/Users/admin/full-version/src/views/ui-elements/cards/statistics/OrdersBarChart.js"],"sourcesContent":["// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\n\n// ** Custom Components\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\n\nconst OrdersBarChart = ({ warning }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/orders-bar-chart').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n    chart: {\n      stacked: true,\n      toolbar: {\n        show: false\n      }\n    },\n    grid: {\n      show: false,\n      padding: {\n        left: 0,\n        right: 0,\n        top: -15,\n        bottom: -15\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '20%',\n        borderRadius: [0, 5],\n        colors: {\n          backgroundBarColors: ['#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3'],\n          backgroundBarRadius: 5\n        }\n      }\n    },\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    colors: [warning],\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  }\n\n  return data !== null ? (\n    <TinyChartStats\n      height={70}\n      type='bar'\n      options={options}\n      title={data.title}\n      stats={data.statistics}\n      series={data.series}\n    />\n  ) : null\n}\n\nexport default OrdersBarChart\n"],"mappings":";;AAAA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAE3C;AACA,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAOC,cAAc,MAAM,0CAA0C;AAAA;AAErE,MAAMC,cAAc,GAAG,QAAiB;EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EACjC;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdE,KAAK,CAACM,GAAG,CAAC,wCAAwC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIH,OAAO,CAACG,GAAG,CAACJ,IAAI,CAAC,CAAC;IAClF,OAAO,MAAMC,OAAO,CAAC,IAAI,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,OAAO,GAAG;IACdC,KAAK,EAAE;MACLC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE;QACPC,IAAI,EAAE;MACR;IACF,CAAC;IACDC,IAAI,EAAE;MACJD,IAAI,EAAE,KAAK;MACXE,OAAO,EAAE;QACPC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,CAAC;QACRC,GAAG,EAAE,CAAC,EAAE;QACRC,MAAM,EAAE,CAAC;MACX;IACF,CAAC;IACDC,WAAW,EAAE;MACXC,GAAG,EAAE;QACHC,UAAU,EAAE,KAAK;QACjBC,WAAW,EAAE,KAAK;QAClBC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACpBC,MAAM,EAAE;UACNC,mBAAmB,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;UAC5EC,mBAAmB,EAAE;QACvB;MACF;IACF,CAAC;IACDC,MAAM,EAAE;MACNf,IAAI,EAAE;IACR,CAAC;IACDgB,UAAU,EAAE;MACVC,OAAO,EAAE;IACX,CAAC;IACDL,MAAM,EAAE,CAACtB,OAAO,CAAC;IACjB4B,KAAK,EAAE;MACLC,MAAM,EAAE;QACNnB,IAAI,EAAE;MACR,CAAC;MACDoB,UAAU,EAAE;QACVpB,IAAI,EAAE;MACR,CAAC;MACDqB,SAAS,EAAE;QACTrB,IAAI,EAAE;MACR;IACF,CAAC;IACDsB,KAAK,EAAE;MACLtB,IAAI,EAAE;IACR,CAAC;IACDuB,OAAO,EAAE;MACPC,CAAC,EAAE;QACDxB,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAED,OAAOT,IAAI,KAAK,IAAI,gBAClB,QAAC,cAAc;IACb,MAAM,EAAE,EAAG;IACX,IAAI,EAAC,KAAK;IACV,OAAO,EAAEK,OAAQ;IACjB,KAAK,EAAEL,IAAI,CAACkC,KAAM;IAClB,KAAK,EAAElC,IAAI,CAACmC,UAAW;IACvB,MAAM,EAAEnC,IAAI,CAACoC;EAAO;IAAA;IAAA;IAAA;EAAA,QACpB,GACA,IAAI;AACV,CAAC;AAAA,GA1EKtC,cAAc;AAAA,KAAdA,cAAc;AA4EpB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module"}