{"ast":null,"code":"var _jsxFileName = \"/Users/admin/full-version/src/views/ui-elements/cards/statistics/ProfitLineChart.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { useEffect, useState } from 'react';\n\n// ** Third Party Components\nimport axios from 'axios';\n\n// ** Custom Components\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfitLineChart = _ref => {\n  _s();\n  let {\n    info\n  } = _ref;\n  // ** State\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    axios.get('/card/card-statistics/profit-line-chart').then(res => setData(res.data));\n    return () => setData(null);\n  }, []);\n  const options = {\n    chart: {\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    grid: {\n      borderColor: '#EBEBEB',\n      strokeDashArray: 5,\n      xaxis: {\n        lines: {\n          show: true\n        }\n      },\n      yaxis: {\n        lines: {\n          show: false\n        }\n      },\n      padding: {\n        top: -30,\n        bottom: -10\n      }\n    },\n    stroke: {\n      width: 3\n    },\n    colors: [info],\n    series: [{\n      data: [0, 20, 5, 30, 15, 45]\n    }],\n    markers: {\n      size: 2,\n      colors: info,\n      strokeColors: info,\n      strokeWidth: 2,\n      strokeOpacity: 1,\n      strokeDashArray: 0,\n      fillOpacity: 1,\n      discrete: [{\n        seriesIndex: 0,\n        dataPointIndex: 5,\n        fillColor: '#ffffff',\n        strokeColor: info,\n        size: 5\n      }],\n      shape: 'circle',\n      radius: 2,\n      hover: {\n        size: 3\n      }\n    },\n    xaxis: {\n      labels: {\n        show: true,\n        style: {\n          fontSize: '0px'\n        }\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  };\n  return data !== null ? /*#__PURE__*/_jsxDEV(TinyChartStats, {\n    height: 70,\n    type: \"line\",\n    options: options,\n    title: data.title,\n    stats: data.statistics,\n    series: data.series\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this) : null;\n};\n_s(ProfitLineChart, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = ProfitLineChart;\nexport default ProfitLineChart;\nvar _c;\n$RefreshReg$(_c, \"ProfitLineChart\");","map":{"version":3,"names":["useEffect","useState","axios","TinyChartStats","ProfitLineChart","info","data","setData","get","then","res","options","chart","toolbar","show","zoom","enabled","grid","borderColor","strokeDashArray","xaxis","lines","yaxis","padding","top","bottom","stroke","width","colors","series","markers","size","strokeColors","strokeWidth","strokeOpacity","fillOpacity","discrete","seriesIndex","dataPointIndex","fillColor","strokeColor","shape","radius","hover","labels","style","fontSize","axisBorder","axisTicks","tooltip","x","title","statistics"],"sources":["/Users/admin/full-version/src/views/ui-elements/cards/statistics/ProfitLineChart.js"],"sourcesContent":["// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\n\n// ** Custom Components\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\n\nconst ProfitLineChart = ({ info }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/profit-line-chart').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n    chart: {\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    grid: {\n      borderColor: '#EBEBEB',\n      strokeDashArray: 5,\n      xaxis: {\n        lines: {\n          show: true\n        }\n      },\n      yaxis: {\n        lines: {\n          show: false\n        }\n      },\n      padding: {\n        top: -30,\n        bottom: -10\n      }\n    },\n    stroke: {\n      width: 3\n    },\n    colors: [info],\n    series: [\n      {\n        data: [0, 20, 5, 30, 15, 45]\n      }\n    ],\n    markers: {\n      size: 2,\n      colors: info,\n      strokeColors: info,\n      strokeWidth: 2,\n      strokeOpacity: 1,\n      strokeDashArray: 0,\n      fillOpacity: 1,\n      discrete: [\n        {\n          seriesIndex: 0,\n          dataPointIndex: 5,\n          fillColor: '#ffffff',\n          strokeColor: info,\n          size: 5\n        }\n      ],\n      shape: 'circle',\n      radius: 2,\n      hover: {\n        size: 3\n      }\n    },\n    xaxis: {\n      labels: {\n        show: true,\n        style: {\n          fontSize: '0px'\n        }\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  }\n\n  return data !== null ? (\n    <TinyChartStats\n      height={70}\n      type='line'\n      options={options}\n      title={data.title}\n      stats={data.statistics}\n      series={data.series}\n    />\n  ) : null\n}\n\nexport default ProfitLineChart\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}