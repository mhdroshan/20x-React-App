{"ast":null,"code":"var _jsxFileName = \"/Users/admin/full-version/src/router/routes/index.js\";\n// ** React Imports\nimport { Fragment } from 'react';\n\n// ** Routes Imports\nimport AppRoutes from './Apps';\nimport FormRoutes from './Forms';\nimport PagesRoutes from './Pages';\nimport TablesRoutes from './Tables';\nimport ChartsRoutes from './Charts';\nimport DashboardRoutes from './Dashboards';\nimport UiElementRoutes from './UiElements';\nimport ExtensionsRoutes from './Extensions';\nimport PageLayoutsRoutes from './PageLayouts';\nimport AuthenticationRoutes from './Authentication';\n// import AgencySettingsPage from './Authentication'\n\n// ** Layouts\nimport BlankLayout from '@layouts/BlankLayout';\nimport VerticalLayout from '@src/layouts/VerticalLayout';\nimport HorizontalLayout from '@src/layouts/HorizontalLayout';\nimport LayoutWrapper from '@src/@core/layouts/components/layout-wrapper';\n\n// ** Route Components\nimport PublicRoute from '@components/routes/PublicRoute';\nimport PrivateRoute from '@components/routes/PrivateRoute';\n\n// ** Utils\nimport { isObjEmpty } from '@utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLayout = {\n  blank: /*#__PURE__*/_jsxDEV(BlankLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this),\n  vertical: /*#__PURE__*/_jsxDEV(VerticalLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }, this),\n  horizontal: /*#__PURE__*/_jsxDEV(HorizontalLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 15\n  }, this)\n};\n\n// ** Document title\nconst TemplateTitle = '20x.io';\n\n// ** Default Route\nconst DefaultRoute = '/dashboard/ecommerce';\n\n// ** Merge Routes\nconst Routes = [...AuthenticationRoutes, ...DashboardRoutes, ...AppRoutes, ...PagesRoutes, ...UiElementRoutes, ...ExtensionsRoutes, ...PageLayoutsRoutes, ...FormRoutes, ...TablesRoutes, ...ChartsRoutes];\nconst getRouteMeta = route => {\n  if (isObjEmpty(route.element.props)) {\n    if (route.meta) {\n      return {\n        routeMeta: route.meta\n      };\n    } else {\n      return {};\n    }\n  }\n};\n\n// ** Return Filtered Array of Routes & Paths\nconst MergeLayoutRoutes = (layout, defaultLayout) => {\n  const LayoutRoutes = [];\n  if (Routes) {\n    Routes.filter(route => {\n      let isBlank = false;\n      // ** Checks if Route layout or Default layout matches current layout\n      if (route.meta && route.meta.layout && route.meta.layout === layout || (route.meta === undefined || route.meta.layout === undefined) && defaultLayout === layout) {\n        let RouteTag = PrivateRoute;\n\n        // ** Check for public or private route\n        if (route.meta) {\n          route.meta.layout === 'blank' ? isBlank = true : isBlank = false;\n          RouteTag = route.meta.publicRoute ? PublicRoute : PrivateRoute;\n        }\n        if (route.element) {\n          const Wrapper =\n          // eslint-disable-next-line multiline-ternary\n          isObjEmpty(route.element.props) && isBlank === false ?\n          // eslint-disable-next-line multiline-ternary\n          LayoutWrapper : Fragment;\n          route.element = /*#__PURE__*/_jsxDEV(Wrapper, {\n            ...(isBlank === false ? getRouteMeta(route) : {}),\n            children: /*#__PURE__*/_jsxDEV(RouteTag, {\n              route: route,\n              children: route.element\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this);\n        }\n\n        // Push route to LayoutRoutes\n        LayoutRoutes.push(route);\n      }\n      return LayoutRoutes;\n    });\n  }\n  return LayoutRoutes;\n};\n_c = MergeLayoutRoutes;\nconst getRoutes = layout => {\n  const defaultLayout = layout || 'vertical';\n  const layouts = ['vertical', 'horizontal', 'blank'];\n  const AllRoutes = [];\n  layouts.forEach(layoutItem => {\n    const LayoutRoutes = MergeLayoutRoutes(layoutItem, defaultLayout);\n    AllRoutes.push({\n      path: '/',\n      element: getLayout[layoutItem] || getLayout[defaultLayout],\n      children: LayoutRoutes\n    });\n  });\n  return AllRoutes;\n};\nexport { DefaultRoute, TemplateTitle, Routes, getRoutes };\nvar _c;\n$RefreshReg$(_c, \"MergeLayoutRoutes\");","map":{"version":3,"names":["Fragment","AppRoutes","FormRoutes","PagesRoutes","TablesRoutes","ChartsRoutes","DashboardRoutes","UiElementRoutes","ExtensionsRoutes","PageLayoutsRoutes","AuthenticationRoutes","BlankLayout","VerticalLayout","HorizontalLayout","LayoutWrapper","PublicRoute","PrivateRoute","isObjEmpty","getLayout","blank","vertical","horizontal","TemplateTitle","DefaultRoute","Routes","getRouteMeta","route","element","props","meta","routeMeta","MergeLayoutRoutes","layout","defaultLayout","LayoutRoutes","filter","isBlank","undefined","RouteTag","publicRoute","Wrapper","push","getRoutes","layouts","AllRoutes","forEach","layoutItem","path","children"],"sources":["/Users/admin/full-version/src/router/routes/index.js"],"sourcesContent":["// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Routes Imports\nimport AppRoutes from './Apps'\nimport FormRoutes from './Forms'\nimport PagesRoutes from './Pages'\nimport TablesRoutes from './Tables'\nimport ChartsRoutes from './Charts'\nimport DashboardRoutes from './Dashboards'\nimport UiElementRoutes from './UiElements'\nimport ExtensionsRoutes from './Extensions'\nimport PageLayoutsRoutes from './PageLayouts'\nimport AuthenticationRoutes from './Authentication'\n// import AgencySettingsPage from './Authentication'\n\n// ** Layouts\nimport BlankLayout from '@layouts/BlankLayout'\nimport VerticalLayout from '@src/layouts/VerticalLayout'\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\nimport LayoutWrapper from '@src/@core/layouts/components/layout-wrapper'\n\n// ** Route Components\nimport PublicRoute from '@components/routes/PublicRoute'\nimport PrivateRoute from '@components/routes/PrivateRoute'\n\n// ** Utils\nimport { isObjEmpty } from '@utils'\n\nconst getLayout = {\n  blank: <BlankLayout />,\n  vertical: <VerticalLayout />,\n  horizontal: <HorizontalLayout />\n}\n\n// ** Document title\nconst TemplateTitle = '20x.io'\n\n// ** Default Route\nconst DefaultRoute = '/dashboard/ecommerce'\n\n// ** Merge Routes\nconst Routes = [\n  ...AuthenticationRoutes,\n  ...DashboardRoutes,\n  ...AppRoutes,\n  ...PagesRoutes,\n  ...UiElementRoutes,\n  ...ExtensionsRoutes,\n  ...PageLayoutsRoutes,\n  ...FormRoutes,\n  ...TablesRoutes,\n  ...ChartsRoutes\n]\n\nconst getRouteMeta = route => {\n  if (isObjEmpty(route.element.props)) {\n    if (route.meta) {\n      return { routeMeta: route.meta }\n    } else {\n      return {}\n    }\n  }\n}\n\n// ** Return Filtered Array of Routes & Paths\nconst MergeLayoutRoutes = (layout, defaultLayout) => {\n  const LayoutRoutes = []\n\n  if (Routes) {\n    Routes.filter(route => {\n      let isBlank = false\n      // ** Checks if Route layout or Default layout matches current layout\n      if (\n        (route.meta && route.meta.layout && route.meta.layout === layout) ||\n        ((route.meta === undefined || route.meta.layout === undefined) && defaultLayout === layout)\n      ) {\n        let RouteTag = PrivateRoute\n\n        // ** Check for public or private route\n        if (route.meta) {\n          route.meta.layout === 'blank' ? (isBlank = true) : (isBlank = false)\n          RouteTag = route.meta.publicRoute ? PublicRoute : PrivateRoute\n        }\n        if (route.element) {\n          const Wrapper =\n            // eslint-disable-next-line multiline-ternary\n            isObjEmpty(route.element.props) && isBlank === false\n              ? // eslint-disable-next-line multiline-ternary\n                LayoutWrapper\n              : Fragment\n\n          route.element = (\n            <Wrapper {...(isBlank === false ? getRouteMeta(route) : {})}>\n              <RouteTag route={route}>{route.element}</RouteTag>\n            </Wrapper>\n          )\n        }\n\n        // Push route to LayoutRoutes\n        LayoutRoutes.push(route)\n      }\n      return LayoutRoutes\n    })\n  }\n  return LayoutRoutes\n}\n\nconst getRoutes = layout => {\n  const defaultLayout = layout || 'vertical'\n  const layouts = ['vertical', 'horizontal', 'blank']\n\n  const AllRoutes = []\n\n  layouts.forEach(layoutItem => {\n    const LayoutRoutes = MergeLayoutRoutes(layoutItem, defaultLayout)\n\n    AllRoutes.push({\n      path: '/',\n      element: getLayout[layoutItem] || getLayout[defaultLayout],\n      children: LayoutRoutes\n    })\n  })\n  return AllRoutes\n}\n\nexport { DefaultRoute, TemplateTitle, Routes, getRoutes }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}