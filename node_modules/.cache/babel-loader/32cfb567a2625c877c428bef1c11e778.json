{"ast":null,"code":"var _jsxFileName = \"/Users/admin/full-version/src/views/apps/kanban/index.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { useEffect, useState } from 'react';\n\n// ** Third Party Imports\nimport { Plus } from 'react-feather';\nimport { useForm, Controller } from 'react-hook-form';\n\n// ** Reactstrap Imports\nimport { Button, Input, FormText } from 'reactstrap';\n\n// ** Redux Imports\nimport { useDispatch, useSelector } from 'react-redux';\n\n// ** Actions\nimport { fetchBoards, fetchTasks, addBoard } from './store';\n\n// ** Kanban Component\nimport TaskSidebar from './TaskSidebar';\nimport KanbanBoards from './KanbanBoards';\n\n// ** Styles\nimport '@styles/react/apps/app-kanban.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultValues = {\n  boardTitle: ''\n};\nconst labelColors = {\n  App: 'info',\n  UX: 'success',\n  Images: 'warning',\n  Forms: 'success',\n  'Code Review': 'danger',\n  'Charts & Maps': 'primary'\n};\nconst KanbanBoard = () => {\n  _s();\n  // ** States\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [showAddBoard, setShowAddBoard] = useState(false);\n\n  // ** Hooks\n  const dispatch = useDispatch();\n  const store = useSelector(state => state.kanban);\n  const {\n    reset,\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues\n  });\n  const handleAddBoardReset = () => {\n    reset();\n    setShowAddBoard(false);\n  };\n  const handleOpenAddBoard = () => {\n    reset();\n    setShowAddBoard(true);\n  };\n  const handleAddBoardFormSubmit = data => {\n    dispatch(addBoard({\n      title: data.boardTitle,\n      id: data.boardTitle.toLowerCase().replace(/ /g, '-')\n    }));\n    handleAddBoardReset();\n  };\n  const handleTaskSidebarToggle = () => setSidebarOpen(!sidebarOpen);\n  const renderBoards = () => {\n    return store.boards.map((board, index) => {\n      const isLastBoard = store.boards[store.boards.length - 1].id === board.id;\n      return /*#__PURE__*/_jsxDEV(KanbanBoards, {\n        store: store,\n        board: board,\n        labelColors: labelColors,\n        isLastBoard: isLastBoard,\n        index: `${board.id}-${index}`,\n        handleTaskSidebarToggle: handleTaskSidebarToggle\n      }, `${board.id}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const renderAddBoardForm = () => {\n    return showAddBoard ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleAddBoardFormSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-50\",\n        children: [/*#__PURE__*/_jsxDEV(Controller, {\n          name: \"boardTitle\",\n          control: control,\n          rules: {\n            required: true\n          },\n          render: _ref => {\n            let {\n              field: {\n                value,\n                onChange\n              }\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(Input, {\n              autoFocus: true,\n              value: value,\n              id: \"board-title\",\n              onChange: onChange,\n              placeholder: \"Board Title\",\n              invalid: Boolean(errors.boardTitle),\n              \"aria-describedby\": \"validation-add-board\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), errors.boardTitle && /*#__PURE__*/_jsxDEV(FormText, {\n          color: \"danger\",\n          id: \"validation-add-board\",\n          children: \"Please enter a valid Board Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          size: \"sm\",\n          type: \"submit\",\n          className: \"me-75\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          outline: true,\n          size: \"sm\",\n          color: \"secondary\",\n          onClick: handleAddBoardReset,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this) : null;\n  };\n  useEffect(() => {\n    dispatch(fetchBoards());\n    dispatch(fetchTasks());\n  }, [dispatch]);\n  return store.boards.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-kanban-wrapper\",\n    children: [renderBoards(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ms-1\",\n      style: {\n        minWidth: 150\n      },\n      children: !showAddBoard ? /*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        color: \"light-secondary\",\n        onClick: handleOpenAddBoard,\n        children: [/*#__PURE__*/_jsxDEV(Plus, {\n          size: 14,\n          className: \"me-25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"align-middle\",\n          children: \" Add Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this) : renderAddBoardForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskSidebar, {\n      labelColors: labelColors,\n      sidebarOpen: sidebarOpen,\n      selectedTask: store.selectedTask,\n      handleTaskSidebarToggle: handleTaskSidebarToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this) : null;\n};\n_s(KanbanBoard, \"1E/qRq3ZoYg5p90U7HM+h3DrS+c=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["useEffect","useState","Plus","useForm","Controller","Button","Input","FormText","useDispatch","useSelector","fetchBoards","fetchTasks","addBoard","TaskSidebar","KanbanBoards","defaultValues","boardTitle","labelColors","App","UX","Images","Forms","KanbanBoard","sidebarOpen","setSidebarOpen","showAddBoard","setShowAddBoard","dispatch","store","state","kanban","reset","control","handleSubmit","formState","errors","handleAddBoardReset","handleOpenAddBoard","handleAddBoardFormSubmit","data","title","id","toLowerCase","replace","handleTaskSidebarToggle","renderBoards","boards","map","board","index","isLastBoard","length","renderAddBoardForm","required","field","value","onChange","Boolean","minWidth","selectedTask"],"sources":["/Users/admin/full-version/src/views/apps/kanban/index.js"],"sourcesContent":["// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Imports\nimport { Plus } from 'react-feather'\nimport { useForm, Controller } from 'react-hook-form'\n\n// ** Reactstrap Imports\nimport { Button, Input, FormText } from 'reactstrap'\n\n// ** Redux Imports\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Actions\nimport { fetchBoards, fetchTasks, addBoard } from './store'\n\n// ** Kanban Component\nimport TaskSidebar from './TaskSidebar'\nimport KanbanBoards from './KanbanBoards'\n\n// ** Styles\nimport '@styles/react/apps/app-kanban.scss'\n\nconst defaultValues = {\n  boardTitle: ''\n}\n\nconst labelColors = {\n  App: 'info',\n  UX: 'success',\n  Images: 'warning',\n  Forms: 'success',\n  'Code Review': 'danger',\n  'Charts & Maps': 'primary'\n}\n\nconst KanbanBoard = () => {\n  // ** States\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [showAddBoard, setShowAddBoard] = useState(false)\n\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.kanban)\n  const {\n    reset,\n    control,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({ defaultValues })\n\n  const handleAddBoardReset = () => {\n    reset()\n    setShowAddBoard(false)\n  }\n\n  const handleOpenAddBoard = () => {\n    reset()\n    setShowAddBoard(true)\n  }\n\n  const handleAddBoardFormSubmit = data => {\n    dispatch(addBoard({ title: data.boardTitle, id: data.boardTitle.toLowerCase().replace(/ /g, '-') }))\n    handleAddBoardReset()\n  }\n\n  const handleTaskSidebarToggle = () => setSidebarOpen(!sidebarOpen)\n\n  const renderBoards = () => {\n    return store.boards.map((board, index) => {\n      const isLastBoard = store.boards[store.boards.length - 1].id === board.id\n\n      return (\n        <KanbanBoards\n          store={store}\n          board={board}\n          labelColors={labelColors}\n          isLastBoard={isLastBoard}\n          key={`${board.id}-${index}`}\n          index={`${board.id}-${index}`}\n          handleTaskSidebarToggle={handleTaskSidebarToggle}\n        />\n      )\n    })\n  }\n\n  const renderAddBoardForm = () => {\n    return showAddBoard ? (\n      <form onSubmit={handleSubmit(handleAddBoardFormSubmit)}>\n        <div className='mb-50'>\n          <Controller\n            name='boardTitle'\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { value, onChange } }) => (\n              <Input\n                autoFocus\n                value={value}\n                id='board-title'\n                onChange={onChange}\n                placeholder='Board Title'\n                invalid={Boolean(errors.boardTitle)}\n                aria-describedby='validation-add-board'\n              />\n            )}\n          />\n          {errors.boardTitle && (\n            <FormText color='danger' id='validation-add-board'>\n              Please enter a valid Board Title\n            </FormText>\n          )}\n        </div>\n        <div>\n          <Button color='primary' size='sm' type='submit' className='me-75'>\n            Add\n          </Button>\n          <Button outline size='sm' color='secondary' onClick={handleAddBoardReset}>\n            Cancel\n          </Button>\n        </div>\n      </form>\n    ) : null\n  }\n\n  useEffect(() => {\n    dispatch(fetchBoards())\n    dispatch(fetchTasks())\n  }, [dispatch])\n\n  return store.boards.length ? (\n    <div className='app-kanban-wrapper'>\n      {renderBoards()}\n\n      <div className='ms-1' style={{ minWidth: 150 }}>\n        {!showAddBoard ? (\n          <Button size='sm' color='light-secondary' onClick={handleOpenAddBoard}>\n            <Plus size={14} className='me-25' />\n            <span className='align-middle'> Add Board</span>\n          </Button>\n        ) : (\n          renderAddBoardForm()\n        )}\n      </div>\n\n      <TaskSidebar\n        labelColors={labelColors}\n        sidebarOpen={sidebarOpen}\n        selectedTask={store.selectedTask}\n        handleTaskSidebarToggle={handleTaskSidebarToggle}\n      />\n    </div>\n  ) : null\n}\n\nexport default KanbanBoard\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}