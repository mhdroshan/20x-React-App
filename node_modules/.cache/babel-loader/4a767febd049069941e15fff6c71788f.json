{"ast":null,"code":"var _jsxFileName = \"/Users/admin/full-version/src/views/apps/calendar/index.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { Fragment, useState, useEffect } from 'react';\n\n// ** Third Party Components\nimport classnames from 'classnames';\nimport { Row, Col } from 'reactstrap';\n\n// ** Calendar App Component Imports\nimport Calendar from './Calendar';\nimport SidebarLeft from './SidebarLeft';\nimport AddEventSidebar from './AddEventSidebar';\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL';\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchEvents, selectEvent, updateEvent, updateFilter, updateAllFilters, addEvent, removeEvent } from './store';\n\n// ** Styles\nimport '@styles/react/apps/app-calendar.scss';\n\n// ** CalendarColors\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calendarsColor = {\n  Business: 'primary',\n  Holiday: 'success',\n  Personal: 'danger',\n  Family: 'warning',\n  ETC: 'info'\n};\nconst CalendarComponent = () => {\n  _s();\n  // ** Variables\n  const dispatch = useDispatch();\n  const store = useSelector(state => state.calendar);\n\n  // ** states\n  const [calendarApi, setCalendarApi] = useState(null);\n  const [addSidebarOpen, setAddSidebarOpen] = useState(false);\n  const [leftSidebarOpen, setLeftSidebarOpen] = useState(false);\n\n  // ** Hooks\n  const [isRtl] = useRTL();\n\n  // ** AddEventSidebar Toggle Function\n  const handleAddEventSidebar = () => setAddSidebarOpen(!addSidebarOpen);\n\n  // ** LeftSidebar Toggle Function\n  const toggleSidebar = val => setLeftSidebarOpen(val);\n\n  // ** Blank Event Object\n  const blankEvent = {\n    title: '',\n    start: '',\n    end: '',\n    allDay: false,\n    url: '',\n    extendedProps: {\n      calendar: '',\n      guests: [],\n      location: '',\n      description: ''\n    }\n  };\n\n  // ** refetchEvents\n  const refetchEvents = () => {\n    if (calendarApi !== null) {\n      calendarApi.refetchEvents();\n    }\n  };\n\n  // ** Fetch Events On Mount\n  useEffect(() => {\n    dispatch(fetchEvents(store.selectedCalendars));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-calendar overflow-hidden border\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"g-0\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          id: \"app-calendar-sidebar\",\n          className: classnames('col app-calendar-sidebar flex-grow-0 overflow-hidden d-flex flex-column', {\n            show: leftSidebarOpen\n          }),\n          children: /*#__PURE__*/_jsxDEV(SidebarLeft, {\n            store: store,\n            dispatch: dispatch,\n            updateFilter: updateFilter,\n            toggleSidebar: toggleSidebar,\n            updateAllFilters: updateAllFilters,\n            handleAddEventSidebar: handleAddEventSidebar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"position-relative\",\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            isRtl: isRtl,\n            store: store,\n            dispatch: dispatch,\n            blankEvent: blankEvent,\n            calendarApi: calendarApi,\n            selectEvent: selectEvent,\n            updateEvent: updateEvent,\n            toggleSidebar: toggleSidebar,\n            calendarsColor: calendarsColor,\n            setCalendarApi: setCalendarApi,\n            handleAddEventSidebar: handleAddEventSidebar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classnames('body-content-overlay', {\n            show: leftSidebarOpen === true\n          }),\n          onClick: () => toggleSidebar(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddEventSidebar, {\n      store: store,\n      dispatch: dispatch,\n      addEvent: addEvent,\n      open: addSidebarOpen,\n      selectEvent: selectEvent,\n      updateEvent: updateEvent,\n      removeEvent: removeEvent,\n      calendarApi: calendarApi,\n      refetchEvents: refetchEvents,\n      calendarsColor: calendarsColor,\n      handleAddEventSidebar: handleAddEventSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarComponent, \"8xZfriqfrVAj9k8c5jPa4w/ZBac=\", false, function () {\n  return [useDispatch, useSelector, useRTL];\n});\n_c = CalendarComponent;\nexport default CalendarComponent;\nvar _c;\n$RefreshReg$(_c, \"CalendarComponent\");","map":{"version":3,"names":["Fragment","useState","useEffect","classnames","Row","Col","Calendar","SidebarLeft","AddEventSidebar","useRTL","useSelector","useDispatch","fetchEvents","selectEvent","updateEvent","updateFilter","updateAllFilters","addEvent","removeEvent","calendarsColor","Business","Holiday","Personal","Family","ETC","CalendarComponent","dispatch","store","state","calendar","calendarApi","setCalendarApi","addSidebarOpen","setAddSidebarOpen","leftSidebarOpen","setLeftSidebarOpen","isRtl","handleAddEventSidebar","toggleSidebar","val","blankEvent","title","start","end","allDay","url","extendedProps","guests","location","description","refetchEvents","selectedCalendars","show"],"sources":["/Users/admin/full-version/src/views/apps/calendar/index.js"],"sourcesContent":["// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { Row, Col } from 'reactstrap'\n\n// ** Calendar App Component Imports\nimport Calendar from './Calendar'\nimport SidebarLeft from './SidebarLeft'\nimport AddEventSidebar from './AddEventSidebar'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchEvents, selectEvent, updateEvent, updateFilter, updateAllFilters, addEvent, removeEvent } from './store'\n\n// ** Styles\nimport '@styles/react/apps/app-calendar.scss'\n\n// ** CalendarColors\nconst calendarsColor = {\n  Business: 'primary',\n  Holiday: 'success',\n  Personal: 'danger',\n  Family: 'warning',\n  ETC: 'info'\n}\n\nconst CalendarComponent = () => {\n  // ** Variables\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.calendar)\n\n  // ** states\n  const [calendarApi, setCalendarApi] = useState(null)\n  const [addSidebarOpen, setAddSidebarOpen] = useState(false)\n  const [leftSidebarOpen, setLeftSidebarOpen] = useState(false)\n\n  // ** Hooks\n  const [isRtl] = useRTL()\n\n  // ** AddEventSidebar Toggle Function\n  const handleAddEventSidebar = () => setAddSidebarOpen(!addSidebarOpen)\n\n  // ** LeftSidebar Toggle Function\n  const toggleSidebar = val => setLeftSidebarOpen(val)\n\n  // ** Blank Event Object\n  const blankEvent = {\n    title: '',\n    start: '',\n    end: '',\n    allDay: false,\n    url: '',\n    extendedProps: {\n      calendar: '',\n      guests: [],\n      location: '',\n      description: ''\n    }\n  }\n\n  // ** refetchEvents\n  const refetchEvents = () => {\n    if (calendarApi !== null) {\n      calendarApi.refetchEvents()\n    }\n  }\n\n  // ** Fetch Events On Mount\n  useEffect(() => {\n    dispatch(fetchEvents(store.selectedCalendars))\n  }, [])\n\n  return (\n    <Fragment>\n      <div className='app-calendar overflow-hidden border'>\n        <Row className='g-0'>\n          <Col\n            id='app-calendar-sidebar'\n            className={classnames('col app-calendar-sidebar flex-grow-0 overflow-hidden d-flex flex-column', {\n              show: leftSidebarOpen\n            })}\n          >\n            <SidebarLeft\n              store={store}\n              dispatch={dispatch}\n              updateFilter={updateFilter}\n              toggleSidebar={toggleSidebar}\n              updateAllFilters={updateAllFilters}\n              handleAddEventSidebar={handleAddEventSidebar}\n            />\n          </Col>\n          <Col className='position-relative'>\n            <Calendar\n              isRtl={isRtl}\n              store={store}\n              dispatch={dispatch}\n              blankEvent={blankEvent}\n              calendarApi={calendarApi}\n              selectEvent={selectEvent}\n              updateEvent={updateEvent}\n              toggleSidebar={toggleSidebar}\n              calendarsColor={calendarsColor}\n              setCalendarApi={setCalendarApi}\n              handleAddEventSidebar={handleAddEventSidebar}\n            />\n          </Col>\n          <div\n            className={classnames('body-content-overlay', {\n              show: leftSidebarOpen === true\n            })}\n            onClick={() => toggleSidebar(false)}\n          ></div>\n        </Row>\n      </div>\n      <AddEventSidebar\n        store={store}\n        dispatch={dispatch}\n        addEvent={addEvent}\n        open={addSidebarOpen}\n        selectEvent={selectEvent}\n        updateEvent={updateEvent}\n        removeEvent={removeEvent}\n        calendarApi={calendarApi}\n        refetchEvents={refetchEvents}\n        calendarsColor={calendarsColor}\n        handleAddEventSidebar={handleAddEventSidebar}\n      />\n    </Fragment>\n  )\n}\n\nexport default CalendarComponent\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}