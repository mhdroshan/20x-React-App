{"ast":null,"code":"var _jsxFileName = \"/Users/admin/full-version/src/views/ui-elements/cards/statistics/QuaterlySales.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { useEffect, useState } from 'react';\n\n// ** Third Party Components\nimport axios from 'axios';\nimport { ShoppingCart } from 'react-feather';\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuarterlySales = _ref => {\n  _s();\n  let {\n    danger\n  } = _ref;\n  // ** State\n  const [data, setData] = useState(null);\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [danger],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  };\n  useEffect(() => {\n    axios.get('/card/card-statistics/sales').then(res => setData(res.data));\n  }, []);\n  return data !== null ? /*#__PURE__*/_jsxDEV(StatsWithAreaChart, {\n    icon: /*#__PURE__*/_jsxDEV(ShoppingCart, {\n      size: 21\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this),\n    color: \"danger\",\n    stats: data.analyticsData.sales,\n    statTitle: \"Quarterly Sales\",\n    options: options,\n    series: data.series,\n    type: \"area\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this) : null;\n};\n_s(QuarterlySales, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = QuarterlySales;\nexport default QuarterlySales;\nvar _c;\n$RefreshReg$(_c, \"QuarterlySales\");","map":{"version":3,"names":["useEffect","useState","axios","ShoppingCart","StatsWithAreaChart","QuarterlySales","danger","data","setData","options","chart","id","toolbar","show","sparkline","enabled","grid","colors","dataLabels","stroke","curve","width","fill","type","gradient","shadeIntensity","opacityFrom","opacityTo","stops","xaxis","labels","axisBorder","yaxis","tooltip","x","get","then","res","analyticsData","sales","series"],"sources":["/Users/admin/full-version/src/views/ui-elements/cards/statistics/QuaterlySales.js"],"sourcesContent":["// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { ShoppingCart } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst QuarterlySales = ({ danger }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [danger],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/sales').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<ShoppingCart size={21} />}\n      color='danger'\n      stats={data.analyticsData.sales}\n      statTitle='Quarterly Sales'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default QuarterlySales\n"],"mappings":";;AAAA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAE3C;AACA,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,eAAe;;AAE5C;AACA,OAAOC,kBAAkB,MAAM,8CAA8C;AAAA;AAE7E,MAAMC,cAAc,GAAG,QAAgB;EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC;EAChC;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMQ,OAAO,GAAG;IACdC,KAAK,EAAE;MACLC,EAAE,EAAE,SAAS;MACbC,OAAO,EAAE;QACPC,IAAI,EAAE;MACR,CAAC;MACDC,SAAS,EAAE;QACTC,OAAO,EAAE;MACX;IACF,CAAC;IACDC,IAAI,EAAE;MACJH,IAAI,EAAE;IACR,CAAC;IACDI,MAAM,EAAE,CAACX,MAAM,CAAC;IAChBY,UAAU,EAAE;MACVH,OAAO,EAAE;IACX,CAAC;IACDI,MAAM,EAAE;MACNC,KAAK,EAAE,QAAQ;MACfC,KAAK,EAAE;IACT,CAAC;IACDC,IAAI,EAAE;MACJC,IAAI,EAAE,UAAU;MAChBC,QAAQ,EAAE;QACRC,cAAc,EAAE,GAAG;QACnBC,WAAW,EAAE,GAAG;QAChBC,SAAS,EAAE,GAAG;QACdC,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG;MACpB;IACF,CAAC;IAEDC,KAAK,EAAE;MACLC,MAAM,EAAE;QACNjB,IAAI,EAAE;MACR,CAAC;MACDkB,UAAU,EAAE;QACVlB,IAAI,EAAE;MACR;IACF,CAAC;IACDmB,KAAK,EAAE;MACLF,MAAM,EAAE;QACNjB,IAAI,EAAE;MACR;IACF,CAAC;IACDoB,OAAO,EAAE;MACPC,CAAC,EAAE;QAAErB,IAAI,EAAE;MAAM;IACnB;EACF,CAAC;EAEDb,SAAS,CAAC,MAAM;IACdE,KAAK,CAACiC,GAAG,CAAC,6BAA6B,CAAC,CAACC,IAAI,CAACC,GAAG,IAAI7B,OAAO,CAAC6B,GAAG,CAAC9B,IAAI,CAAC,CAAC;EACzE,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOA,IAAI,KAAK,IAAI,gBAClB,QAAC,kBAAkB;IACjB,IAAI,eAAE,QAAC,YAAY;MAAC,IAAI,EAAE;IAAG;MAAA;MAAA;MAAA;IAAA,QAAI;IACjC,KAAK,EAAC,QAAQ;IACd,KAAK,EAAEA,IAAI,CAAC+B,aAAa,CAACC,KAAM;IAChC,SAAS,EAAC,iBAAiB;IAC3B,OAAO,EAAE9B,OAAQ;IACjB,MAAM,EAAEF,IAAI,CAACiC,MAAO;IACpB,IAAI,EAAC;EAAM;IAAA;IAAA;IAAA;EAAA,QACX,GACA,IAAI;AACV,CAAC;AAAA,GApEKnC,cAAc;AAAA,KAAdA,cAAc;AAqEpB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module"}