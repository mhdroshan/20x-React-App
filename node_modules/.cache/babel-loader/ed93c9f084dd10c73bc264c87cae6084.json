{"ast":null,"code":"var _jsxFileName = \"/Users/admin/full-version/src/views/apps/kanban/TaskSidebar.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { useState } from 'react';\n\n// ** Reactstrap Imports\nimport { Badge, Modal, ModalBody, Button, Form, Input, Label, FormFeedback } from 'reactstrap';\n\n// ** Redux Imports\nimport { useDispatch } from 'react-redux';\n\n// ** Third Party Components\nimport Flatpickr from 'react-flatpickr';\nimport { useDropzone } from 'react-dropzone';\nimport { X, DownloadCloud } from 'react-feather';\nimport Select, { components } from 'react-select'; //eslint-disable-line\nimport { useForm, Controller } from 'react-hook-form';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\n// ** Actions\nimport { updateTask, handleSelectTask } from './store';\n\n// ** Utils\nimport { isObjEmpty, selectThemeColors } from '@utils';\n\n// ** Assignee Avatars\nimport img1 from '@src/assets/images/portrait/small/avatar-s-3.jpg';\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg';\nimport img3 from '@src/assets/images/portrait/small/avatar-s-4.jpg';\nimport img4 from '@src/assets/images/portrait/small/avatar-s-6.jpg';\nimport img5 from '@src/assets/images/portrait/small/avatar-s-2.jpg';\nimport img6 from '@src/assets/images/portrait/small/avatar-s-11.jpg';\n\n// ** Styles Imports\nimport '@styles/react/libs/flatpickr/flatpickr.scss';\nimport '@styles/react/libs/react-select/_react-select.scss';\nimport '@styles/react/libs/file-uploader/file-uploader.scss';\n\n// ** Assignee Select Options\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst assigneeOptions = [{\n  value: 'Pheobe Buffay',\n  label: 'Pheobe Buffay',\n  img: img1\n}, {\n  value: 'Chandler Bing',\n  label: 'Chandler Bing',\n  img: img2\n}, {\n  value: 'Ross Geller',\n  label: 'Ross Geller',\n  img: img3\n}, {\n  value: 'Monica Geller',\n  label: 'Monica Geller',\n  img: img4\n}, {\n  value: 'Joey Tribbiani',\n  label: 'Joey Tribbiani',\n  img: img5\n}, {\n  value: 'Rachel Green',\n  label: 'Rachel Green',\n  img: img6\n}, {\n  value: 'Jerry Seinfeld',\n  label: 'Jerry Seinfeld',\n  img: img3\n}, {\n  value: 'Jerry Seinfeld',\n  label: 'Jerry Seinfeld',\n  img: img3\n}, {\n  value: 'Astro Kramer',\n  label: 'Astro Kramer',\n  img: img2\n}, {\n  value: 'George Costanza',\n  label: 'George Costanza',\n  img: img5\n}, {\n  value: 'Charlie Kelly',\n  label: 'Charlie Kelly',\n  img: img4\n}, {\n  value: 'Dennis Reynolds',\n  label: 'Dennis Reynolds',\n  img: img3\n}];\n\n// ** Label Select Options\nconst labelOptions = [{\n  value: 'UX',\n  label: 'UX'\n}, {\n  value: 'App',\n  label: 'App'\n}, {\n  value: 'Forms',\n  label: 'Forms'\n}, {\n  value: 'Images',\n  label: 'Images'\n}, {\n  value: 'Code Review',\n  label: 'Code Review'\n}, {\n  value: 'Charts & Maps',\n  label: 'Charts & Maps'\n}];\nconst TaskSidebar = props => {\n  _s();\n  // ** Props\n  const {\n    sidebarOpen,\n    labelColors,\n    selectedTask,\n    handleTaskSidebarToggle\n  } = props;\n\n  // ** State\n  const [desc, setDesc] = useState('');\n  const [files, setFiles] = useState([]);\n  const [labels, setLabels] = useState([]);\n  const [dueDate, setDueDate] = useState(new Date());\n  const [assignedTo, setAssignedTo] = useState(null);\n\n  // ** Hooks\n  const dispatch = useDispatch();\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    multiple: false,\n    onDrop: acceptedFiles => {\n      setFiles([...acceptedFiles.map(file => Object.assign(file))]);\n    }\n  });\n  const {\n    control,\n    setError,\n    setValue,\n    clearErrors,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      title: ''\n    }\n  });\n\n  // ** Custom Select Components\n  const LabelOptions = _ref => {\n    let {\n      data,\n      ...props\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(components.Option, {\n      ...props,\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        color: `light-${labelColors[data.label]}`,\n        children: data.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  };\n  const AssigneeComponent = _ref2 => {\n    let {\n      data,\n      ...props\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(components.Option, {\n      ...props,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"d-block rounded-circle me-50\",\n          src: data.img,\n          height: \"26\",\n          width: \"26\",\n          alt: data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-0\",\n          children: data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  };\n\n  // ** Function to run when sidebar opens\n  const handleSidebarOpened = () => {\n    if (!isObjEmpty(selectedTask)) {\n      setValue('title', selectedTask.title);\n      setDueDate(selectedTask.dueDate);\n      setDesc(selectedTask.description);\n      if (selectedTask.coverImage) {\n        setFiles([selectedTask.coverImage]);\n      }\n      if (selectedTask.assignedTo.length) {\n        const arr = [];\n        selectedTask.assignedTo.map(assignee => {\n          arr.push({\n            value: assignee.title,\n            label: assignee.title,\n            img: assignee.img\n          });\n        });\n        setAssignedTo(arr);\n      }\n      if (selectedTask.labels.length) {\n        const labelsArr = [];\n        selectedTask.labels.map(label => {\n          labelsArr.push({\n            value: label,\n            label\n          });\n        });\n        setLabels(labelsArr);\n      }\n    }\n  };\n\n  // ** Function to run when sidebar closes\n  const handleSidebarClosed = () => {\n    setDesc('');\n    setFiles([]);\n    setLabels([]);\n    setValue('title', '');\n    setDueDate(new Date());\n    clearErrors();\n    dispatch(handleSelectTask({}));\n    setAssignedTo(null);\n  };\n  const onSubmit = data => {\n    if (data.title.length) {\n      const labelsArr = [];\n      const assignedArr = [];\n      if (assignedTo.length) {\n        assignedTo.map(item => {\n          assignedArr.push({\n            title: item.label,\n            img: item.img\n          });\n        });\n      }\n      if (labels.length) {\n        labels.map(label => {\n          labelsArr.push(label.label);\n        });\n      }\n      dispatch(updateTask({\n        ...selectedTask,\n        ...data,\n        dueDate,\n        labels: labelsArr,\n        description: desc,\n        assignedTo: assignedArr,\n        // eslint-disable-next-line multiline-ternary\n        ...(files.length && typeof files[0] !== 'string' ?\n        // eslint-disable-next-line multiline-ternary\n        {\n          coverImage: URL.createObjectURL(files[0])\n        } : {})\n      }));\n      handleTaskSidebarToggle();\n    } else {\n      setError('title');\n    }\n  };\n  const renderUploadedImage = () => {\n    if (files.length && typeof files[0] !== 'string') {\n      // @ts-ignore\n      return files.map(file => /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: file.name,\n        className: \"single-file-image img-fluid\",\n        src: URL.createObjectURL(file)\n      }, file.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this));\n    } else {\n      if (typeof files[0] === 'string') {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"task-img\",\n          className: \"single-file-image img-fluid\",\n          src: files[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 16\n        }, this);\n      }\n    }\n  };\n  const handleResetFields = () => {\n    setDesc('');\n    setValue('title', store.selectedTask.title);\n    setDueDate(store.selectedTask.dueDate);\n    if (selectedTask.assignedTo.length) {\n      const arr = [];\n      selectedTask.assignedTo.map(assignee => {\n        arr.push({\n          value: assignee.title,\n          label: assignee.title,\n          img: assignee.img\n        });\n      });\n      setAssignedTo(arr);\n    }\n    if (selectedTask.labels.length) {\n      const labels = [];\n      selectedTask.labels.map(label => {\n        labels.push({\n          value: label,\n          label\n        });\n      });\n      setLabels(labels);\n    }\n    if (selectedTask.coverImage) {\n      setFiles([selectedTask.coverImage]);\n    } else {\n      setFiles([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: sidebarOpen,\n    className: \"sidebar-lg\",\n    contentClassName: \"p-0\",\n    onOpened: handleSidebarOpened,\n    onClosed: handleSidebarClosed,\n    toggle: handleTaskSidebarToggle,\n    modalClassName: \"modal-slide-in sidebar-kanban-modal\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      id: \"form-modal-kanban\",\n      className: \"kanban-task-modal\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header d-flex align-items-center justify-content-between mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"modal-title\",\n          children: \"Update Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(X, {\n          className: \"fw-normal mt-25\",\n          size: 16,\n          onClick: handleTaskSidebarToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n        options: {\n          wheelPropagation: false\n        },\n        children: /*#__PURE__*/_jsxDEV(ModalBody, {\n          className: \"flex-grow-1 pb-sm-0 pb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"task-title\",\n              children: [\"Title \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"title\",\n              control: control,\n              render: _ref3 => {\n                let {\n                  field\n                } = _ref3;\n                return /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"task-title\",\n                  placeholder: \"Title\",\n                  className: \"new-todo-item-title\",\n                  invalid: errors.title && true,\n                  ...field\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 19\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), errors.title && /*#__PURE__*/_jsxDEV(FormFeedback, {\n              children: \"Please enter a valid task title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"due-date\",\n              children: \"Due Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Flatpickr, {\n              id: \"due-date\",\n              name: \"due-date\",\n              value: dueDate,\n              className: \"form-control\",\n              options: {\n                dateFormat: 'Y-m-d'\n              },\n              onChange: date => setDueDate(date[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"task-labels\",\n              children: \"Labels\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              isMulti: true,\n              value: labels,\n              id: \"task-labels\",\n              isClearable: false,\n              options: labelOptions,\n              className: \"react-select\",\n              classNamePrefix: \"select\",\n              theme: selectThemeColors,\n              components: {\n                Option: LabelOptions\n              },\n              onChange: data => {\n                setLabels(data !== null ? [...data] : []);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"task-assignee\",\n              children: \"Assignee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              isMulti: true,\n              id: \"task-assignee\",\n              value: assignedTo,\n              isClearable: false,\n              className: \"react-select\",\n              classNamePrefix: \"select\",\n              options: assigneeOptions,\n              theme: selectThemeColors,\n              onChange: data => setAssignedTo(data),\n              components: {\n                Option: AssigneeComponent\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              ...getRootProps({\n                className: 'dropzone'\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ...getInputProps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex align-items-center justify-content-center flex-column text-center\",\n                children: [/*#__PURE__*/_jsxDEV(DownloadCloud, {\n                  size: 64\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"Drop Files here or click to upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this), files.length ? renderUploadedImage() : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"task-desc\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"textarea\",\n              value: desc,\n              name: \"text\",\n              id: \"task-desc\",\n              rows: \"3\",\n              placeholder: \"Description...\",\n              onChange: e => setDesc(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: \"primary\",\n              className: \"me-1\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              outline: true,\n              color: \"secondary\",\n              onClick: handleResetFields,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskSidebar, \"XbcB/YO6ocyNqeC+ElMcGZrss2E=\", false, function () {\n  return [useDispatch, useDropzone, useForm];\n});\n_c = TaskSidebar;\nexport default TaskSidebar;\nvar _c;\n$RefreshReg$(_c, \"TaskSidebar\");","map":{"version":3,"names":["useState","Badge","Modal","ModalBody","Button","Form","Input","Label","FormFeedback","useDispatch","Flatpickr","useDropzone","X","DownloadCloud","Select","components","useForm","Controller","PerfectScrollbar","updateTask","handleSelectTask","isObjEmpty","selectThemeColors","img1","img2","img3","img4","img5","img6","assigneeOptions","value","label","img","labelOptions","TaskSidebar","props","sidebarOpen","labelColors","selectedTask","handleTaskSidebarToggle","desc","setDesc","files","setFiles","labels","setLabels","dueDate","setDueDate","Date","assignedTo","setAssignedTo","dispatch","getRootProps","getInputProps","multiple","onDrop","acceptedFiles","map","file","Object","assign","control","setError","setValue","clearErrors","handleSubmit","formState","errors","defaultValues","title","LabelOptions","data","AssigneeComponent","handleSidebarOpened","description","coverImage","length","arr","assignee","push","labelsArr","handleSidebarClosed","onSubmit","assignedArr","item","URL","createObjectURL","renderUploadedImage","name","handleResetFields","store","wheelPropagation","field","dateFormat","date","Option","className","e","target"],"sources":["/Users/admin/full-version/src/views/apps/kanban/TaskSidebar.js"],"sourcesContent":["// ** React Imports\nimport { useState } from 'react'\n\n// ** Reactstrap Imports\nimport { Badge, Modal, ModalBody, Button, Form, Input, Label, FormFeedback } from 'reactstrap'\n\n// ** Redux Imports\nimport { useDispatch } from 'react-redux'\n\n// ** Third Party Components\nimport Flatpickr from 'react-flatpickr'\nimport { useDropzone } from 'react-dropzone'\nimport { X, DownloadCloud } from 'react-feather'\nimport Select, { components } from 'react-select' //eslint-disable-line\nimport { useForm, Controller } from 'react-hook-form'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// ** Actions\nimport { updateTask, handleSelectTask } from './store'\n\n// ** Utils\nimport { isObjEmpty, selectThemeColors } from '@utils'\n\n// ** Assignee Avatars\nimport img1 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\nimport img3 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\nimport img4 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\nimport img5 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\nimport img6 from '@src/assets/images/portrait/small/avatar-s-11.jpg'\n\n// ** Styles Imports\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/file-uploader/file-uploader.scss'\n\n// ** Assignee Select Options\nconst assigneeOptions = [\n  { value: 'Pheobe Buffay', label: 'Pheobe Buffay', img: img1 },\n  { value: 'Chandler Bing', label: 'Chandler Bing', img: img2 },\n  { value: 'Ross Geller', label: 'Ross Geller', img: img3 },\n  { value: 'Monica Geller', label: 'Monica Geller', img: img4 },\n  { value: 'Joey Tribbiani', label: 'Joey Tribbiani', img: img5 },\n  { value: 'Rachel Green', label: 'Rachel Green', img: img6 },\n  { value: 'Jerry Seinfeld', label: 'Jerry Seinfeld', img: img3 },\n  { value: 'Jerry Seinfeld', label: 'Jerry Seinfeld', img: img3 },\n  { value: 'Astro Kramer', label: 'Astro Kramer', img: img2 },\n  { value: 'George Costanza', label: 'George Costanza', img: img5 },\n  { value: 'Charlie Kelly', label: 'Charlie Kelly', img: img4 },\n  { value: 'Dennis Reynolds', label: 'Dennis Reynolds', img: img3 }\n]\n\n// ** Label Select Options\nconst labelOptions = [\n  { value: 'UX', label: 'UX' },\n  { value: 'App', label: 'App' },\n  { value: 'Forms', label: 'Forms' },\n  { value: 'Images', label: 'Images' },\n  { value: 'Code Review', label: 'Code Review' },\n  { value: 'Charts & Maps', label: 'Charts & Maps' }\n]\n\nconst TaskSidebar = props => {\n  // ** Props\n  const { sidebarOpen, labelColors, selectedTask, handleTaskSidebarToggle } = props\n\n  // ** State\n  const [desc, setDesc] = useState('')\n  const [files, setFiles] = useState([])\n  const [labels, setLabels] = useState([])\n  const [dueDate, setDueDate] = useState(new Date())\n  const [assignedTo, setAssignedTo] = useState(null)\n\n  // ** Hooks\n  const dispatch = useDispatch()\n  const { getRootProps, getInputProps } = useDropzone({\n    multiple: false,\n    onDrop: acceptedFiles => {\n      setFiles([...acceptedFiles.map(file => Object.assign(file))])\n    }\n  })\n\n  const {\n    control,\n    setError,\n    setValue,\n    clearErrors,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    defaultValues: { title: '' }\n  })\n\n  // ** Custom Select Components\n  const LabelOptions = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <Badge color={`light-${labelColors[data.label]}`}>{data.label}</Badge>\n      </components.Option>\n    )\n  }\n\n  const AssigneeComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <div className='d-flex align-items-center'>\n          <img className='d-block rounded-circle me-50' src={data.img} height='26' width='26' alt={data.label} />\n          <p className='mb-0'>{data.label}</p>\n        </div>\n      </components.Option>\n    )\n  }\n\n  // ** Function to run when sidebar opens\n  const handleSidebarOpened = () => {\n    if (!isObjEmpty(selectedTask)) {\n      setValue('title', selectedTask.title)\n      setDueDate(selectedTask.dueDate)\n      setDesc(selectedTask.description)\n      if (selectedTask.coverImage) {\n        setFiles([selectedTask.coverImage])\n      }\n      if (selectedTask.assignedTo.length) {\n        const arr = []\n        selectedTask.assignedTo.map(assignee => {\n          arr.push({ value: assignee.title, label: assignee.title, img: assignee.img })\n        })\n        setAssignedTo(arr)\n      }\n      if (selectedTask.labels.length) {\n        const labelsArr = []\n        selectedTask.labels.map(label => {\n          labelsArr.push({ value: label, label })\n        })\n        setLabels(labelsArr)\n      }\n    }\n  }\n\n  // ** Function to run when sidebar closes\n  const handleSidebarClosed = () => {\n    setDesc('')\n    setFiles([])\n    setLabels([])\n    setValue('title', '')\n    setDueDate(new Date())\n    clearErrors()\n    dispatch(handleSelectTask({}))\n    setAssignedTo(null)\n  }\n\n  const onSubmit = data => {\n    if (data.title.length) {\n      const labelsArr = []\n      const assignedArr = []\n\n      if (assignedTo.length) {\n        assignedTo.map(item => {\n          assignedArr.push({ title: item.label, img: item.img })\n        })\n      }\n\n      if (labels.length) {\n        labels.map(label => {\n          labelsArr.push(label.label)\n        })\n      }\n\n      dispatch(\n        updateTask({\n          ...selectedTask,\n          ...data,\n          dueDate,\n          labels: labelsArr,\n          description: desc,\n          assignedTo: assignedArr,\n          // eslint-disable-next-line multiline-ternary\n          ...(files.length && typeof files[0] !== 'string'\n            ? // eslint-disable-next-line multiline-ternary\n              {\n                coverImage: URL.createObjectURL(files[0])\n              }\n            : {})\n        })\n      )\n      handleTaskSidebarToggle()\n    } else {\n      setError('title')\n    }\n  }\n\n  const renderUploadedImage = () => {\n    if (files.length && typeof files[0] !== 'string') {\n      // @ts-ignore\n      return files.map(file => (\n        <img key={file.name} alt={file.name} className='single-file-image img-fluid' src={URL.createObjectURL(file)} />\n      ))\n    } else {\n      if (typeof files[0] === 'string') {\n        return <img alt='task-img' className='single-file-image img-fluid' src={files[0]} />\n      }\n    }\n  }\n\n  const handleResetFields = () => {\n    setDesc('')\n\n    setValue('title', store.selectedTask.title)\n    setDueDate(store.selectedTask.dueDate)\n    if (selectedTask.assignedTo.length) {\n      const arr = []\n      selectedTask.assignedTo.map(assignee => {\n        arr.push({ value: assignee.title, label: assignee.title, img: assignee.img })\n      })\n\n      setAssignedTo(arr)\n    }\n    if (selectedTask.labels.length) {\n      const labels = []\n      selectedTask.labels.map(label => {\n        labels.push({ value: label, label })\n      })\n      setLabels(labels)\n    }\n\n    if (selectedTask.coverImage) {\n      setFiles([selectedTask.coverImage])\n    } else {\n      setFiles([])\n    }\n  }\n\n  return (\n    <Modal\n      isOpen={sidebarOpen}\n      className='sidebar-lg'\n      contentClassName='p-0'\n      onOpened={handleSidebarOpened}\n      onClosed={handleSidebarClosed}\n      toggle={handleTaskSidebarToggle}\n      modalClassName='modal-slide-in sidebar-kanban-modal'\n    >\n      <Form id='form-modal-kanban' className='kanban-task-modal' onSubmit={handleSubmit(onSubmit)}>\n        <div className='modal-header d-flex align-items-center justify-content-between mb-1'>\n          <h5 className='modal-title'>Update Task</h5>\n          <X className='fw-normal mt-25' size={16} onClick={handleTaskSidebarToggle} />\n        </div>\n        <PerfectScrollbar options={{ wheelPropagation: false }}>\n          <ModalBody className='flex-grow-1 pb-sm-0 pb-3'>\n            <div className='mb-1'>\n              <Label className='form-label' for='task-title'>\n                Title <span className='text-danger'>*</span>\n              </Label>\n              <Controller\n                name='title'\n                control={control}\n                render={({ field }) => (\n                  <Input\n                    id='task-title'\n                    placeholder='Title'\n                    className='new-todo-item-title'\n                    invalid={errors.title && true}\n                    {...field}\n                  />\n                )}\n              />\n              {errors.title && <FormFeedback>Please enter a valid task title</FormFeedback>}\n            </div>\n            <div className='mb-1'>\n              <Label className='form-label' for='due-date'>\n                Due Date\n              </Label>\n              <Flatpickr\n                id='due-date'\n                name='due-date'\n                value={dueDate}\n                className='form-control'\n                options={{ dateFormat: 'Y-m-d' }}\n                onChange={date => setDueDate(date[0])}\n              />\n            </div>\n            <div className='mb-1'>\n              <Label className='form-label' for='task-labels'>\n                Labels\n              </Label>\n              <Select\n                isMulti\n                value={labels}\n                id='task-labels'\n                isClearable={false}\n                options={labelOptions}\n                className='react-select'\n                classNamePrefix='select'\n                theme={selectThemeColors}\n                components={{ Option: LabelOptions }}\n                onChange={data => {\n                  setLabels(data !== null ? [...data] : [])\n                }}\n              />\n            </div>\n            <div className='mb-1'>\n              <Label className='form-label' for='task-assignee'>\n                Assignee\n              </Label>\n              <Select\n                isMulti\n                id='task-assignee'\n                value={assignedTo}\n                isClearable={false}\n                className='react-select'\n                classNamePrefix='select'\n                options={assigneeOptions}\n                theme={selectThemeColors}\n                onChange={data => setAssignedTo(data)}\n                components={{ Option: AssigneeComponent }}\n              />\n            </div>\n            <div className='mb-1'>\n              <div {...getRootProps({ className: 'dropzone' })}>\n                <input {...getInputProps()} />\n                <div className='d-flex align-items-center justify-content-center flex-column text-center'>\n                  <DownloadCloud size={64} />\n                  <h5>Drop Files here or click to upload</h5>\n                </div>\n                {files.length ? renderUploadedImage() : null}\n              </div>\n            </div>\n            <div className='mb-1'>\n              <Label className='form-label' for='task-desc'>\n                Description\n              </Label>\n              <Input\n                type='textarea'\n                value={desc}\n                name='text'\n                id='task-desc'\n                rows='3'\n                placeholder='Description...'\n                onChange={e => setDesc(e.target.value)}\n              />\n            </div>\n            <div>\n              <Button type='submit' color='primary' className='me-1'>\n                Update\n              </Button>\n              <Button outline color='secondary' onClick={handleResetFields}>\n                Reset\n              </Button>\n            </div>\n          </ModalBody>\n        </PerfectScrollbar>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default TaskSidebar\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}