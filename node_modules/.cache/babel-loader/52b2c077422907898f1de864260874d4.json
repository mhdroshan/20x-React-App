{"ast":null,"code":"var _jsxFileName = \"/Users/admin/full-version/src/views/components/modal/ModalUnmount.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { Fragment, useState } from 'react';\n\n// ** Reactstrap Imports\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Form, Row, Col } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalDestructuring = () => {\n  _s();\n  // ** States\n  const [visibility, setVisibility] = useState(false);\n  const [unmountOnClose, setUnmountOnClose] = useState(true);\n  const changeUnmountOnClose = e => {\n    const value = e.target.value;\n    setUnmountOnClose(JSON.parse(value));\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => e.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"mb-sm-0 mb-1\",\n          sm: \"6\",\n          md: \"4\",\n          lg: \"2\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"select\",\n            name: \"unmountOnClose\",\n            id: \"unmountOnClose\",\n            onChange: e => changeUnmountOnClose(e),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"true\",\n              children: \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"false\",\n              children: \"false\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"6\",\n          md: \"4\",\n          lg: \"2\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            onClick: () => setVisibility(!visibility),\n            outline: true,\n            children: \"Launch Modal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: visibility,\n      toggle: () => setVisibility(!visibility),\n      unmountOnClose: unmountOnClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => setVisibility(!visibility),\n        children: \"Modal title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"textarea\",\n          placeholder: \"Write something (data should remain in modal if unmountOnClose is set to false)\",\n          rows: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: () => setVisibility(!visibility),\n          outline: true,\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(ModalDestructuring, \"pJqNVTM4aFX4YydsMp2N85ModXI=\");\n_c = ModalDestructuring;\nexport default ModalDestructuring;\nvar _c;\n$RefreshReg$(_c, \"ModalDestructuring\");","map":{"version":3,"names":["Fragment","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","Input","Form","Row","Col","ModalDestructuring","visibility","setVisibility","unmountOnClose","setUnmountOnClose","changeUnmountOnClose","e","value","target","JSON","parse","preventDefault"],"sources":["/Users/admin/full-version/src/views/components/modal/ModalUnmount.js"],"sourcesContent":["// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Reactstrap Imports\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Form, Row, Col } from 'reactstrap'\n\nconst ModalDestructuring = () => {\n  // ** States\n  const [visibility, setVisibility] = useState(false)\n  const [unmountOnClose, setUnmountOnClose] = useState(true)\n\n  const changeUnmountOnClose = e => {\n    const value = e.target.value\n    setUnmountOnClose(JSON.parse(value))\n  }\n\n  return (\n    <Fragment>\n      <Form onSubmit={e => e.preventDefault()}>\n        <Row>\n          <Col className='mb-sm-0 mb-1' sm='6' md='4' lg='2'>\n            <Input type='select' name='unmountOnClose' id='unmountOnClose' onChange={e => changeUnmountOnClose(e)}>\n              <option value='true'>true</option>\n              <option value='false'>false</option>\n            </Input>\n          </Col>\n          <Col sm='6' md='4' lg='2'>\n            <Button color='success' onClick={() => setVisibility(!visibility)} outline>\n              Launch Modal\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n      <Modal isOpen={visibility} toggle={() => setVisibility(!visibility)} unmountOnClose={unmountOnClose}>\n        <ModalHeader toggle={() => setVisibility(!visibility)}>Modal title</ModalHeader>\n        <ModalBody>\n          <Input\n            type='textarea'\n            placeholder='Write something (data should remain in modal if unmountOnClose is set to false)'\n            rows={5}\n          />\n        </ModalBody>\n        <ModalFooter>\n          <Button color='primary' onClick={() => setVisibility(!visibility)} outline>\n            Accept\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </Fragment>\n  )\n}\nexport default ModalDestructuring\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;;AAE1C;AACA,SAASC,MAAM,EAAEC,KAAK,EAAEC,WAAW,EAAEC,SAAS,EAAEC,WAAW,EAAEC,KAAK,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAQ,YAAY;AAAA;AAEtG,MAAMC,kBAAkB,GAAG,MAAM;EAAA;EAC/B;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMe,oBAAoB,GAAGC,CAAC,IAAI;IAChC,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5BH,iBAAiB,CAACK,IAAI,CAACC,KAAK,CAACH,KAAK,CAAC,CAAC;EACtC,CAAC;EAED,oBACE,QAAC,QAAQ;IAAA,wBACP,QAAC,IAAI;MAAC,QAAQ,EAAED,CAAC,IAAIA,CAAC,CAACK,cAAc,EAAG;MAAA,uBACtC,QAAC,GAAG;QAAA,wBACF,QAAC,GAAG;UAAC,SAAS,EAAC,cAAc;UAAC,EAAE,EAAC,GAAG;UAAC,EAAE,EAAC,GAAG;UAAC,EAAE,EAAC,GAAG;UAAA,uBAChD,QAAC,KAAK;YAAC,IAAI,EAAC,QAAQ;YAAC,IAAI,EAAC,gBAAgB;YAAC,EAAE,EAAC,gBAAgB;YAAC,QAAQ,EAAEL,CAAC,IAAID,oBAAoB,CAACC,CAAC,CAAE;YAAA,wBACpG;cAAQ,KAAK,EAAC,MAAM;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAc,eAClC;cAAQ,KAAK,EAAC,OAAO;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAe;UAAA;YAAA;YAAA;YAAA;UAAA;QAC9B;UAAA;UAAA;UAAA;QAAA,QACJ,eACN,QAAC,GAAG;UAAC,EAAE,EAAC,GAAG;UAAC,EAAE,EAAC,GAAG;UAAC,EAAE,EAAC,GAAG;UAAA,uBACvB,QAAC,MAAM;YAAC,KAAK,EAAC,SAAS;YAAC,OAAO,EAAE,MAAMJ,aAAa,CAAC,CAACD,UAAU,CAAE;YAAC,OAAO;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAEjE;UAAA;UAAA;UAAA;QAAA,QACL;MAAA;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA,QACD,eACP,QAAC,KAAK;MAAC,MAAM,EAAEA,UAAW;MAAC,MAAM,EAAE,MAAMC,aAAa,CAAC,CAACD,UAAU,CAAE;MAAC,cAAc,EAAEE,cAAe;MAAA,wBAClG,QAAC,WAAW;QAAC,MAAM,EAAE,MAAMD,aAAa,CAAC,CAACD,UAAU,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0B,eAChF,QAAC,SAAS;QAAA,uBACR,QAAC,KAAK;UACJ,IAAI,EAAC,UAAU;UACf,WAAW,EAAC,iFAAiF;UAC7F,IAAI,EAAE;QAAE;UAAA;UAAA;UAAA;QAAA;MACR;QAAA;QAAA;QAAA;MAAA,QACQ,eACZ,QAAC,WAAW;QAAA,uBACV,QAAC,MAAM;UAAC,KAAK,EAAC,SAAS;UAAC,OAAO,EAAE,MAAMC,aAAa,CAAC,CAACD,UAAU,CAAE;UAAC,OAAO;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAEjE;QAAA;QAAA;QAAA;MAAA,QACG;IAAA;MAAA;MAAA;MAAA;IAAA,QACR;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEf,CAAC;AAAA,GA5CKD,kBAAkB;AAAA,KAAlBA,kBAAkB;AA6CxB,eAAeA,kBAAkB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}