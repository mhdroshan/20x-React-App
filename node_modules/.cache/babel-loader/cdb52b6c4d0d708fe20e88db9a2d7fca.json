{"ast":null,"code":"var _jsxFileName = \"/Users/admin/full-version/src/views/forms/validation/BasicHookForm.js\",\n  _s = $RefreshSig$();\n// ** Third Party Components\nimport toast from 'react-hot-toast';\nimport { Check } from 'react-feather';\nimport { useForm, Controller } from 'react-hook-form';\n\n// ** Custom Components\nimport Avatar from '@components/avatar';\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Button, Label, Input, Form } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicHookForm = () => {\n  _s();\n  // ** Hooks\n  const {\n    reset,\n    control,\n    setError,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = data => {\n    if (Object.values(data).every(field => field.length > 0)) {\n      toast( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"me-1\",\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            size: \"sm\",\n            color: \"success\",\n            icon: /*#__PURE__*/_jsxDEV(Check, {\n              size: 12\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Form Submitted!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-unstyled mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"firstName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this), \": \", data.firstNameBasic]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"lastName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this), \": \", data.lastNameBasic]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this), \": \", data.emailBasic]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this));\n    } else {\n      for (const key in data) {\n        if (data[key].length === 0) {\n          setError(key, {\n            type: 'manual'\n          });\n        }\n      }\n    }\n  };\n  const handleReset = () => {\n    reset({\n      emailBasic: '',\n      firstNameBasic: '',\n      lastNameBasic: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h4\",\n        children: \"Basic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"firstNameBasic\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            defaultValue: \"\",\n            control: control,\n            id: \"firstNameBasic\",\n            name: \"firstNameBasic\",\n            render: _ref => {\n              let {\n                field\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Bruce\",\n                invalid: errors.firstNameBasic && true,\n                ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 38\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"lastNameBasic\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            defaultValue: \"\",\n            control: control,\n            id: \"lastNameBasic\",\n            name: \"lastNameBasic\",\n            render: _ref2 => {\n              let {\n                field\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Wayne\",\n                invalid: errors.lastNameBasic && true,\n                ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 38\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"emailBasic\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            defaultValue: \"\",\n            control: control,\n            id: \"emailBasic\",\n            name: \"emailBasic\",\n            render: _ref3 => {\n              let {\n                field\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(Input, {\n                type: \"email\",\n                placeholder: \"bruce.wayne@email.com\",\n                invalid: errors.emailBasic && true,\n                ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"me-1\",\n            color: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            outline: true,\n            color: \"secondary\",\n            type: \"reset\",\n            onClick: handleReset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicHookForm, \"RVakVBq67rUGzjHzr2yuCeaOujU=\", false, function () {\n  return [useForm];\n});\n_c = BasicHookForm;\nexport default BasicHookForm;\nvar _c;\n$RefreshReg$(_c, \"BasicHookForm\");","map":{"version":3,"names":["toast","Check","useForm","Controller","Avatar","Card","CardHeader","CardTitle","CardBody","Button","Label","Input","Form","BasicHookForm","reset","control","setError","handleSubmit","formState","errors","onSubmit","data","Object","values","every","field","length","firstNameBasic","lastNameBasic","emailBasic","key","type","handleReset"],"sources":["/Users/admin/full-version/src/views/forms/validation/BasicHookForm.js"],"sourcesContent":["// ** Third Party Components\nimport toast from 'react-hot-toast'\nimport { Check } from 'react-feather'\nimport { useForm, Controller } from 'react-hook-form'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Button, Label, Input, Form } from 'reactstrap'\n\nconst BasicHookForm = () => {\n  // ** Hooks\n  const {\n    reset,\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm()\n\n  const onSubmit = data => {\n    if (Object.values(data).every(field => field.length > 0)) {\n      toast(\n        <div className='d-flex'>\n          <div className='me-1'>\n            <Avatar size='sm' color='success' icon={<Check size={12} />} />\n          </div>\n          <div className='d-flex flex-column'>\n            <h6>Form Submitted!</h6>\n            <ul className='list-unstyled mb-0'>\n              <li>\n                <strong>firstName</strong>: {data.firstNameBasic}\n              </li>\n              <li>\n                <strong>lastName</strong>: {data.lastNameBasic}\n              </li>\n              <li>\n                <strong>email</strong>: {data.emailBasic}\n              </li>\n            </ul>\n          </div>\n        </div>\n      )\n    } else {\n      for (const key in data) {\n        if (data[key].length === 0) {\n          setError(key, {\n            type: 'manual'\n          })\n        }\n      }\n    }\n  }\n\n  const handleReset = () => {\n    reset({\n      emailBasic: '',\n      firstNameBasic: '',\n      lastNameBasic: ''\n    })\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Basic</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <div className='mb-1'>\n            <Label className='form-label' for='firstNameBasic'>\n              First Name\n            </Label>\n            <Controller\n              defaultValue=''\n              control={control}\n              id='firstNameBasic'\n              name='firstNameBasic'\n              render={({ field }) => <Input placeholder='Bruce' invalid={errors.firstNameBasic && true} {...field} />}\n            />\n          </div>\n          <div className='mb-1'>\n            <Label className='form-label' for='lastNameBasic'>\n              Last Name\n            </Label>\n            <Controller\n              defaultValue=''\n              control={control}\n              id='lastNameBasic'\n              name='lastNameBasic'\n              render={({ field }) => <Input placeholder='Wayne' invalid={errors.lastNameBasic && true} {...field} />}\n            />\n          </div>\n          <div className='mb-1'>\n            <Label className='form-label' for='emailBasic'>\n              Email\n            </Label>\n            <Controller\n              defaultValue=''\n              control={control}\n              id='emailBasic'\n              name='emailBasic'\n              render={({ field }) => (\n                <Input\n                  type='email'\n                  placeholder='bruce.wayne@email.com'\n                  invalid={errors.emailBasic && true}\n                  {...field}\n                />\n              )}\n            />\n          </div>\n          <div className='d-flex'>\n            <Button className='me-1' color='primary' type='submit'>\n              Submit\n            </Button>\n            <Button outline color='secondary' type='reset' onClick={handleReset}>\n              Reset\n            </Button>\n          </div>\n        </Form>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default BasicHookForm\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}