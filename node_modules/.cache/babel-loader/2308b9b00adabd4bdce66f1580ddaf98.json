{"ast":null,"code":"var _jsxFileName = \"/Users/admin/full-version/src/@core/components/card-snippet/index.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { Fragment, useState } from 'react';\n\n// ** Third Party Components\nimport PropTypes from 'prop-types';\nimport { Code } from 'react-feather';\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardSnippet = props => {\n  _s();\n  // ** Props\n  const {\n    title,\n    children,\n    noBody,\n    code,\n    iconCode\n  } = props;\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false);\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : /*#__PURE__*/_jsxDEV(Code, {\n    size: 15\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 42\n  }, this);\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen);\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"card-snippet\",\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h4\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"views cursor-pointer\",\n        onClick: toggle,\n        children: IconCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      isOpen: isOpen,\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(CardSnippet, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = CardSnippet;\nexport default CardSnippet;\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"CardSnippet\");","map":{"version":3,"names":["Fragment","useState","PropTypes","Code","Card","CardHeader","CardBody","CardTitle","Collapse","CardSnippet","props","title","children","noBody","code","iconCode","isOpen","setIsOpen","IconCode","toggle","Wrapper","propTypes","node","bool","any","className","string","isRequired"],"sources":["/Users/admin/full-version/src/@core/components/card-snippet/index.js"],"sourcesContent":["// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;;AAE1C;AACA,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,IAAI,QAAQ,eAAe;;AAEpC;AACA,SAASC,IAAI,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,YAAY;AAAA;AAE5E,MAAMC,WAAW,GAAGC,KAAK,IAAI;EAAA;EAC3B;EACA,MAAM;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,MAAM;IAAEC,IAAI;IAAEC;EAAS,CAAC,GAAGL,KAAK;;EAEzD;EACA,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;;EAE3C;EACA,MAAMiB,QAAQ,GAAGH,QAAQ,GAAGA,QAAQ,gBAAG,QAAC,IAAI;IAAC,IAAI,EAAE;EAAG;IAAA;IAAA;IAAA;EAAA,QAAG;;EAEzD;EACA,MAAMI,MAAM,GAAG,MAAMF,SAAS,CAAC,CAACD,MAAM,CAAC;;EAEvC;EACA,MAAMI,OAAO,GAAGP,MAAM,GAAGb,QAAQ,GAAGM,QAAQ;EAE5C,oBACE,QAAC,IAAI;IAAC,SAAS,EAAC,cAAc;IAAA,wBAC5B,QAAC,UAAU;MAAA,wBACT,QAAC,SAAS;QAAC,GAAG,EAAC,IAAI;QAAA,UAAEK;MAAK;QAAA;QAAA;QAAA;MAAA,QAAa,eACvC;QAAK,SAAS,EAAC,sBAAsB;QAAC,OAAO,EAAEQ,MAAO;QAAA,UACnDD;MAAQ;QAAA;QAAA;QAAA;MAAA,QACL;IAAA;MAAA;MAAA;MAAA;IAAA,QACK,eACb,QAAC,OAAO;MAAA,UAAEN;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAW,eAC7B,QAAC,QAAQ;MAAC,MAAM,EAAEI,MAAO;MAAA,uBACvB,QAAC,QAAQ;QAAA,UAAEF;MAAI;QAAA;QAAA;QAAA;MAAA;IAAY;MAAA;MAAA;MAAA;IAAA,QAClB;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAEX,CAAC;AAAA,GA9BKL,WAAW;AAAA,KAAXA,WAAW;AAgCjB,eAAeA,WAAW;;AAE1B;AACAA,WAAW,CAACY,SAAS,GAAG;EACtBP,IAAI,EAAEZ,SAAS,CAACoB,IAAI;EACpBT,MAAM,EAAEX,SAAS,CAACqB,IAAI;EACtBX,QAAQ,EAAEV,SAAS,CAACsB,GAAG;EACvBT,QAAQ,EAAEb,SAAS,CAACoB,IAAI;EACxBG,SAAS,EAAEvB,SAAS,CAACwB,MAAM;EAC3Bf,KAAK,EAAET,SAAS,CAACwB,MAAM,CAACC;AAC1B,CAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}