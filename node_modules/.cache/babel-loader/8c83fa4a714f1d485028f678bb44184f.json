{"ast":null,"code":"var _jsxFileName = \"/Users/admin/full-version/src/@core/components/autocomplete/index.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport ReactDOM from 'react-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { Fragment, useEffect, useState, useRef } from 'react';\n\n// ** Third Party Components\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { AlertCircle } from 'react-feather';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\n// ** Hooks Imports\nimport { useOnClickOutside } from '@hooks/useOnClickOutside';\n\n// ** Styles Imports\nimport '@styles/base/bootstrap-extended/_include.scss';\nimport './autocomplete.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Autocomplete = props => {\n  _s();\n  // ** Refs\n  const container = useRef(null);\n  const inputElRef = useRef(null);\n  const suggestionsListRef = useRef(null);\n\n  // ** States\n  const [focused, setFocused] = useState(false);\n  const [activeSuggestion, setActiveSuggestion] = useState(0);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [userInput, setUserInput] = useState(props.value ? props.value : '');\n\n  // ** Vars\n  const navigate = useNavigate();\n  let filteredData = [];\n\n  // ** Suggestion Item Click Event\n  const onSuggestionItemClick = (url, e) => {\n    setActiveSuggestion(0);\n    setShowSuggestions(false);\n    setUserInput(filteredData[activeSuggestion][props.filterKey]);\n    if (url !== undefined && url !== null) {\n      navigate(url);\n    }\n    if (props.onSuggestionClick) {\n      props.onSuggestionClick(url, e);\n    }\n  };\n\n  // ** Suggestion Hover Event\n  const onSuggestionItemHover = index => {\n    setActiveSuggestion(index);\n  };\n\n  // ** Input On Change Event\n  const onChange = e => {\n    const userInput = e.currentTarget.value;\n    setActiveSuggestion(0);\n    setShowSuggestions(true);\n    setUserInput(userInput);\n    if (e.target.value < 1) {\n      setShowSuggestions(false);\n    }\n  };\n\n  // ** Input Click Event\n  const onInputClick = e => {\n    e.stopPropagation();\n  };\n\n  // ** Input's Keydown Event\n  const onKeyDown = e => {\n    const filterKey = props.filterKey;\n    const suggestionList = ReactDOM.findDOMNode(suggestionsListRef.current);\n\n    // ** User pressed the up arrow\n    if (e.keyCode === 38 && activeSuggestion !== 0) {\n      setActiveSuggestion(activeSuggestion - 1);\n      if (e.target.value.length > -1 && suggestionList !== null && activeSuggestion <= filteredData.length / 2) {\n        suggestionList.scrollTop = 0;\n      }\n    } else if (e.keyCode === 40 && activeSuggestion < filteredData.length - 1) {\n      // ** User pressed the down arrow\n      setActiveSuggestion(activeSuggestion + 1);\n      if (e.target.value.length > -1 && suggestionList !== null && activeSuggestion >= filteredData.length / 2) {\n        suggestionList.scrollTop = suggestionList.scrollHeight;\n      }\n    } else if (e.keyCode === 27) {\n      // ** User Pressed ESC\n      setShowSuggestions(false);\n      setUserInput('');\n    } else if (e.keyCode === 13 && showSuggestions) {\n      // ** User Pressed ENTER\n      onSuggestionItemClick(filteredData[activeSuggestion].link, e);\n      setUserInput(filteredData[activeSuggestion][filterKey]);\n      setShowSuggestions(false);\n    } else {\n      return;\n    }\n\n    // ** Custom Keydown Event\n    if (props.onKeyDown !== undefined && props.onKeyDown !== null) {\n      props.onKeyDown(e, userInput);\n    }\n  };\n\n  // ** Function To Render Grouped Suggestions\n  const renderGroupedSuggestion = arr => {\n    const {\n      filterKey,\n      customRender\n    } = props;\n    const renderSuggestion = (item, i) => {\n      if (!customRender) {\n        const suggestionURL = item.link !== undefined && item.link !== null ? item.link : null;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: classnames('suggestion-item', {\n            active: filteredData.indexOf(item) === activeSuggestion\n          }),\n          onClick: e => onSuggestionItemClick(suggestionURL, e),\n          onMouseEnter: () => {\n            onSuggestionItemHover(filteredData.indexOf(item));\n          },\n          children: item[filterKey]\n        }, item[filterKey], false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this);\n      } else if (customRender) {\n        return customRender(item, i, filteredData, activeSuggestion, onSuggestionItemClick, onSuggestionItemHover, userInput);\n      } else {\n        return null;\n      }\n    };\n    return arr.map((item, i) => {\n      return renderSuggestion(item, i);\n    });\n  };\n\n  // ** Function To Render Ungrouped Suggestions\n  const renderUngroupedSuggestions = () => {\n    const {\n      filterKey,\n      suggestions,\n      customRender,\n      suggestionLimit\n    } = props;\n    filteredData = [];\n    const sortSingleData = suggestions.filter(i => {\n      const startCondition = i[filterKey].toLowerCase().startsWith(userInput.toLowerCase()),\n        includeCondition = i[filterKey].toLowerCase().includes(userInput.toLowerCase());\n      if (startCondition) {\n        return startCondition;\n      } else if (!startCondition && includeCondition) {\n        return includeCondition;\n      } else {\n        return null;\n      }\n    }).slice(0, suggestionLimit);\n    filteredData.push(...sortSingleData);\n    if (sortSingleData.length) {\n      return sortSingleData.map((suggestion, index) => {\n        const suggestionURL = suggestion.link !== undefined && suggestion.link !== null ? suggestion.link : null;\n        if (!customRender) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: classnames('suggestion-item', {\n              active: filteredData.indexOf(suggestion) === activeSuggestion\n            }),\n            onClick: e => onSuggestionItemClick(suggestionURL, e),\n            onMouseEnter: () => onSuggestionItemHover(filteredData.indexOf(suggestion)),\n            children: suggestion[filterKey]\n          }, suggestion[filterKey], false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this);\n        } else if (customRender) {\n          return customRender(suggestion, index, filteredData, activeSuggestion, onSuggestionItemClick, onSuggestionItemHover, userInput);\n        } else {\n          return null;\n        }\n      });\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"suggestion-item no-result\",\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          size: 15\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"align-middle ms-50\",\n          children: \"No Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  // ** Function To Render Suggestions\n  const renderSuggestions = () => {\n    const {\n      filterKey,\n      grouped,\n      filterHeaderKey,\n      suggestions\n    } = props;\n\n    // ** Checks if suggestions are grouped or not.\n    if (grouped === undefined || grouped === null || !grouped) {\n      return renderUngroupedSuggestions();\n    } else {\n      filteredData = [];\n      return suggestions.map(suggestion => {\n        const sortData = suggestion.data.filter(i => {\n          const startCondition = i[filterKey].toLowerCase().startsWith(userInput.toLowerCase()),\n            includeCondition = i[filterKey].toLowerCase().includes(userInput.toLowerCase());\n          if (startCondition) {\n            return startCondition;\n          } else if (!startCondition && includeCondition) {\n            return includeCondition;\n          } else {\n            return null;\n          }\n        }).slice(0, suggestion.searchLimit);\n        filteredData.push(...sortData);\n        return /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"suggestion-item suggestion-title-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"suggestion-title\",\n              children: suggestion[filterHeaderKey]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), sortData.length ? renderGroupedSuggestion(sortData) : /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"suggestion-item no-result\",\n            children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n              size: 15\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"align-middle ms-50\",\n              children: \"No Result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)]\n        }, suggestion[filterHeaderKey], true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this);\n      });\n    }\n  };\n\n  //** ComponentDidMount\n  useEffect(() => {\n    if (props.defaultSuggestions && focused) {\n      setShowSuggestions(true);\n    }\n  }, [focused, props.defaultSuggestions]);\n\n  //** ComponentDidUpdate\n  useEffect(() => {\n    const textInput = ReactDOM.findDOMNode(inputElRef.current);\n\n    // ** For searchbar focus\n    if (textInput !== null && props.autoFocus) {\n      inputElRef.current.focus();\n    }\n\n    // ** If user has passed default suggestions & focus then show default suggestions\n    if (props.defaultSuggestions && focused) {\n      setShowSuggestions(true);\n    }\n\n    // ** Function to run on user passed Clear Input\n    if (props.clearInput) {\n      props.clearInput(userInput, setUserInput);\n    }\n\n    // ** Function on Suggestions Shown\n    if (props.onSuggestionsShown && showSuggestions) {\n      props.onSuggestionsShown(userInput);\n    }\n  }, [setShowSuggestions, focused, userInput, showSuggestions, props]);\n\n  // ** On External Click Close The Search & Call Passed Function\n  useOnClickOutside(container, () => {\n    setShowSuggestions(false);\n    if (props.externalClick) {\n      props.externalClick();\n    }\n  });\n  let suggestionsListComponent;\n  if (showSuggestions) {\n    suggestionsListComponent = /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n      className: classnames('suggestions-list', {\n        [props.wrapperClass]: props.wrapperClass\n      }),\n      ref: suggestionsListRef,\n      component: \"ul\",\n      options: {\n        wheelPropagation: false\n      },\n      children: renderSuggestions()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"autocomplete-container\",\n    ref: container,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => {\n        onChange(e);\n        if (props.onChange) {\n          props.onChange(e);\n        }\n      },\n      onKeyDown: e => onKeyDown(e),\n      value: userInput,\n      className: `autocomplete-search ${props.className ? props.className : ''}`,\n      placeholder: props.placeholder,\n      onClick: onInputClick,\n      ref: inputElRef,\n      onFocus: () => setFocused(true),\n      autoFocus: props.autoFocus,\n      onBlur: e => {\n        if (props.onBlur) props.onBlur(e);\n        setFocused(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), suggestionsListComponent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n};\n_s(Autocomplete, \"2sKQUEEp6/P23Nl56PdIZDHHwA4=\", false, function () {\n  return [useNavigate, useOnClickOutside];\n});\n_c = Autocomplete;\nexport default Autocomplete;\n\n// ** PropTypes\nAutocomplete.propTypes = {\n  grouped: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  onKeyDown: PropTypes.func,\n  onChange: PropTypes.func,\n  clearInput: PropTypes.func,\n  placeholder: PropTypes.string,\n  externalClick: PropTypes.func,\n  defaultValue: PropTypes.string,\n  wrapperClass: PropTypes.string,\n  filterHeaderKey: PropTypes.string,\n  suggestionLimit: PropTypes.number,\n  onSuggestionsShown: PropTypes.func,\n  onSuggestionItemClick: PropTypes.func,\n  filterKey: PropTypes.string.isRequired,\n  suggestions: PropTypes.array.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"Autocomplete\");","map":{"version":3,"names":["ReactDOM","useNavigate","Fragment","useEffect","useState","useRef","PropTypes","classnames","AlertCircle","PerfectScrollbar","useOnClickOutside","Autocomplete","props","container","inputElRef","suggestionsListRef","focused","setFocused","activeSuggestion","setActiveSuggestion","showSuggestions","setShowSuggestions","userInput","setUserInput","value","navigate","filteredData","onSuggestionItemClick","url","e","filterKey","undefined","onSuggestionClick","onSuggestionItemHover","index","onChange","currentTarget","target","onInputClick","stopPropagation","onKeyDown","suggestionList","findDOMNode","current","keyCode","length","scrollTop","scrollHeight","link","renderGroupedSuggestion","arr","customRender","renderSuggestion","item","i","suggestionURL","active","indexOf","map","renderUngroupedSuggestions","suggestions","suggestionLimit","sortSingleData","filter","startCondition","toLowerCase","startsWith","includeCondition","includes","slice","push","suggestion","renderSuggestions","grouped","filterHeaderKey","sortData","data","searchLimit","defaultSuggestions","textInput","autoFocus","focus","clearInput","onSuggestionsShown","externalClick","suggestionsListComponent","wrapperClass","wheelPropagation","className","placeholder","onBlur","propTypes","bool","func","string","defaultValue","number","isRequired","array"],"sources":["/Users/admin/full-version/src/@core/components/autocomplete/index.js"],"sourcesContent":["// ** React Imports\nimport ReactDOM from 'react-dom'\nimport { useNavigate } from 'react-router-dom'\nimport { Fragment, useEffect, useState, useRef } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { AlertCircle } from 'react-feather'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// ** Hooks Imports\nimport { useOnClickOutside } from '@hooks/useOnClickOutside'\n\n// ** Styles Imports\nimport '@styles/base/bootstrap-extended/_include.scss'\nimport './autocomplete.scss'\n\nconst Autocomplete = props => {\n  // ** Refs\n  const container = useRef(null)\n  const inputElRef = useRef(null)\n  const suggestionsListRef = useRef(null)\n\n  // ** States\n  const [focused, setFocused] = useState(false)\n  const [activeSuggestion, setActiveSuggestion] = useState(0)\n  const [showSuggestions, setShowSuggestions] = useState(false)\n  const [userInput, setUserInput] = useState(props.value ? props.value : '')\n\n  // ** Vars\n  const navigate = useNavigate()\n  let filteredData = []\n\n  // ** Suggestion Item Click Event\n  const onSuggestionItemClick = (url, e) => {\n    setActiveSuggestion(0)\n    setShowSuggestions(false)\n    setUserInput(filteredData[activeSuggestion][props.filterKey])\n    if (url !== undefined && url !== null) {\n      navigate(url)\n    }\n\n    if (props.onSuggestionClick) {\n      props.onSuggestionClick(url, e)\n    }\n  }\n\n  // ** Suggestion Hover Event\n  const onSuggestionItemHover = index => {\n    setActiveSuggestion(index)\n  }\n\n  // ** Input On Change Event\n  const onChange = e => {\n    const userInput = e.currentTarget.value\n    setActiveSuggestion(0)\n    setShowSuggestions(true)\n    setUserInput(userInput)\n    if (e.target.value < 1) {\n      setShowSuggestions(false)\n    }\n  }\n\n  // ** Input Click Event\n  const onInputClick = e => {\n    e.stopPropagation()\n  }\n\n  // ** Input's Keydown Event\n  const onKeyDown = e => {\n    const filterKey = props.filterKey\n    const suggestionList = ReactDOM.findDOMNode(suggestionsListRef.current)\n\n    // ** User pressed the up arrow\n    if (e.keyCode === 38 && activeSuggestion !== 0) {\n      setActiveSuggestion(activeSuggestion - 1)\n\n      if (e.target.value.length > -1 && suggestionList !== null && activeSuggestion <= filteredData.length / 2) {\n        suggestionList.scrollTop = 0\n      }\n    } else if (e.keyCode === 40 && activeSuggestion < filteredData.length - 1) {\n      // ** User pressed the down arrow\n      setActiveSuggestion(activeSuggestion + 1)\n\n      if (e.target.value.length > -1 && suggestionList !== null && activeSuggestion >= filteredData.length / 2) {\n        suggestionList.scrollTop = suggestionList.scrollHeight\n      }\n    } else if (e.keyCode === 27) {\n      // ** User Pressed ESC\n      setShowSuggestions(false)\n      setUserInput('')\n    } else if (e.keyCode === 13 && showSuggestions) {\n      // ** User Pressed ENTER\n      onSuggestionItemClick(filteredData[activeSuggestion].link, e)\n      setUserInput(filteredData[activeSuggestion][filterKey])\n      setShowSuggestions(false)\n    } else {\n      return\n    }\n\n    // ** Custom Keydown Event\n    if (props.onKeyDown !== undefined && props.onKeyDown !== null) {\n      props.onKeyDown(e, userInput)\n    }\n  }\n\n  // ** Function To Render Grouped Suggestions\n  const renderGroupedSuggestion = arr => {\n    const { filterKey, customRender } = props\n\n    const renderSuggestion = (item, i) => {\n      if (!customRender) {\n        const suggestionURL = item.link !== undefined && item.link !== null ? item.link : null\n        return (\n          <li\n            className={classnames('suggestion-item', {\n              active: filteredData.indexOf(item) === activeSuggestion\n            })}\n            key={item[filterKey]}\n            onClick={e => onSuggestionItemClick(suggestionURL, e)}\n            onMouseEnter={() => {\n              onSuggestionItemHover(filteredData.indexOf(item))\n            }}\n          >\n            {item[filterKey]}\n          </li>\n        )\n      } else if (customRender) {\n        return customRender(\n          item,\n          i,\n          filteredData,\n          activeSuggestion,\n          onSuggestionItemClick,\n          onSuggestionItemHover,\n          userInput\n        )\n      } else {\n        return null\n      }\n    }\n\n    return arr.map((item, i) => {\n      return renderSuggestion(item, i)\n    })\n  }\n\n  // ** Function To Render Ungrouped Suggestions\n  const renderUngroupedSuggestions = () => {\n    const { filterKey, suggestions, customRender, suggestionLimit } = props\n\n    filteredData = []\n    const sortSingleData = suggestions\n      .filter(i => {\n        const startCondition = i[filterKey].toLowerCase().startsWith(userInput.toLowerCase()),\n          includeCondition = i[filterKey].toLowerCase().includes(userInput.toLowerCase())\n        if (startCondition) {\n          return startCondition\n        } else if (!startCondition && includeCondition) {\n          return includeCondition\n        } else {\n          return null\n        }\n      })\n      .slice(0, suggestionLimit)\n    filteredData.push(...sortSingleData)\n    if (sortSingleData.length) {\n      return sortSingleData.map((suggestion, index) => {\n        const suggestionURL = suggestion.link !== undefined && suggestion.link !== null ? suggestion.link : null\n        if (!customRender) {\n          return (\n            <li\n              className={classnames('suggestion-item', {\n                active: filteredData.indexOf(suggestion) === activeSuggestion\n              })}\n              key={suggestion[filterKey]}\n              onClick={e => onSuggestionItemClick(suggestionURL, e)}\n              onMouseEnter={() => onSuggestionItemHover(filteredData.indexOf(suggestion))}\n            >\n              {suggestion[filterKey]}\n            </li>\n          )\n        } else if (customRender) {\n          return customRender(\n            suggestion,\n            index,\n            filteredData,\n            activeSuggestion,\n            onSuggestionItemClick,\n            onSuggestionItemHover,\n            userInput\n          )\n        } else {\n          return null\n        }\n      })\n    } else {\n      return (\n        <li className='suggestion-item no-result'>\n          <AlertCircle size={15} /> <span className='align-middle ms-50'>No Result</span>\n        </li>\n      )\n    }\n  }\n\n  // ** Function To Render Suggestions\n  const renderSuggestions = () => {\n    const { filterKey, grouped, filterHeaderKey, suggestions } = props\n\n    // ** Checks if suggestions are grouped or not.\n    if (grouped === undefined || grouped === null || !grouped) {\n      return renderUngroupedSuggestions()\n    } else {\n      filteredData = []\n      return suggestions.map(suggestion => {\n        const sortData = suggestion.data\n          .filter(i => {\n            const startCondition = i[filterKey].toLowerCase().startsWith(userInput.toLowerCase()),\n              includeCondition = i[filterKey].toLowerCase().includes(userInput.toLowerCase())\n            if (startCondition) {\n              return startCondition\n            } else if (!startCondition && includeCondition) {\n              return includeCondition\n            } else {\n              return null\n            }\n          })\n          .slice(0, suggestion.searchLimit)\n\n        filteredData.push(...sortData)\n        return (\n          <Fragment key={suggestion[filterHeaderKey]}>\n            <li className='suggestion-item suggestion-title-wrapper'>\n              <h6 className='suggestion-title'>{suggestion[filterHeaderKey]}</h6>\n            </li>\n            {sortData.length ? (\n              renderGroupedSuggestion(sortData)\n            ) : (\n              <li className='suggestion-item no-result'>\n                <AlertCircle size={15} /> <span className='align-middle ms-50'>No Result</span>\n              </li>\n            )}\n          </Fragment>\n        )\n      })\n    }\n  }\n\n  //** ComponentDidMount\n  useEffect(() => {\n    if (props.defaultSuggestions && focused) {\n      setShowSuggestions(true)\n    }\n  }, [focused, props.defaultSuggestions])\n\n  //** ComponentDidUpdate\n  useEffect(() => {\n    const textInput = ReactDOM.findDOMNode(inputElRef.current)\n\n    // ** For searchbar focus\n    if (textInput !== null && props.autoFocus) {\n      inputElRef.current.focus()\n    }\n\n    // ** If user has passed default suggestions & focus then show default suggestions\n    if (props.defaultSuggestions && focused) {\n      setShowSuggestions(true)\n    }\n\n    // ** Function to run on user passed Clear Input\n    if (props.clearInput) {\n      props.clearInput(userInput, setUserInput)\n    }\n\n    // ** Function on Suggestions Shown\n    if (props.onSuggestionsShown && showSuggestions) {\n      props.onSuggestionsShown(userInput)\n    }\n  }, [setShowSuggestions, focused, userInput, showSuggestions, props])\n\n  // ** On External Click Close The Search & Call Passed Function\n  useOnClickOutside(container, () => {\n    setShowSuggestions(false)\n    if (props.externalClick) {\n      props.externalClick()\n    }\n  })\n\n  let suggestionsListComponent\n\n  if (showSuggestions) {\n    suggestionsListComponent = (\n      <PerfectScrollbar\n        className={classnames('suggestions-list', {\n          [props.wrapperClass]: props.wrapperClass\n        })}\n        ref={suggestionsListRef}\n        component='ul'\n        options={{ wheelPropagation: false }}\n      >\n        {renderSuggestions()}\n      </PerfectScrollbar>\n    )\n  }\n\n  return (\n    <div className='autocomplete-container' ref={container}>\n      <input\n        type='text'\n        onChange={e => {\n          onChange(e)\n          if (props.onChange) {\n            props.onChange(e)\n          }\n        }}\n        onKeyDown={e => onKeyDown(e)}\n        value={userInput}\n        className={`autocomplete-search ${props.className ? props.className : ''}`}\n        placeholder={props.placeholder}\n        onClick={onInputClick}\n        ref={inputElRef}\n        onFocus={() => setFocused(true)}\n        autoFocus={props.autoFocus}\n        onBlur={e => {\n          if (props.onBlur) props.onBlur(e)\n          setFocused(false)\n        }}\n      />\n      {suggestionsListComponent}\n    </div>\n  )\n}\n\nexport default Autocomplete\n\n// ** PropTypes\nAutocomplete.propTypes = {\n  grouped: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  onKeyDown: PropTypes.func,\n  onChange: PropTypes.func,\n  clearInput: PropTypes.func,\n  placeholder: PropTypes.string,\n  externalClick: PropTypes.func,\n  defaultValue: PropTypes.string,\n  wrapperClass: PropTypes.string,\n  filterHeaderKey: PropTypes.string,\n  suggestionLimit: PropTypes.number,\n  onSuggestionsShown: PropTypes.func,\n  onSuggestionItemClick: PropTypes.func,\n  filterKey: PropTypes.string.isRequired,\n  suggestions: PropTypes.array.isRequired\n}\n"],"mappings":";;AAAA;AACA,OAAOA,QAAQ,MAAM,WAAW;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;;AAE7D;AACA,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAOC,gBAAgB,MAAM,yBAAyB;;AAEtD;AACA,SAASC,iBAAiB,QAAQ,0BAA0B;;AAE5D;AACA,OAAO,+CAA+C;AACtD,OAAO,qBAAqB;AAAA;AAE5B,MAAMC,YAAY,GAAGC,KAAK,IAAI;EAAA;EAC5B;EACA,MAAMC,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMS,UAAU,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAMU,kBAAkB,GAAGV,MAAM,CAAC,IAAI,CAAC;;EAEvC;EACA,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAACQ,KAAK,CAACY,KAAK,GAAGZ,KAAK,CAACY,KAAK,GAAG,EAAE,CAAC;;EAE1E;EACA,MAAMC,QAAQ,GAAGxB,WAAW,EAAE;EAC9B,IAAIyB,YAAY,GAAG,EAAE;;EAErB;EACA,MAAMC,qBAAqB,GAAG,CAACC,GAAG,EAAEC,CAAC,KAAK;IACxCV,mBAAmB,CAAC,CAAC,CAAC;IACtBE,kBAAkB,CAAC,KAAK,CAAC;IACzBE,YAAY,CAACG,YAAY,CAACR,gBAAgB,CAAC,CAACN,KAAK,CAACkB,SAAS,CAAC,CAAC;IAC7D,IAAIF,GAAG,KAAKG,SAAS,IAAIH,GAAG,KAAK,IAAI,EAAE;MACrCH,QAAQ,CAACG,GAAG,CAAC;IACf;IAEA,IAAIhB,KAAK,CAACoB,iBAAiB,EAAE;MAC3BpB,KAAK,CAACoB,iBAAiB,CAACJ,GAAG,EAAEC,CAAC,CAAC;IACjC;EACF,CAAC;;EAED;EACA,MAAMI,qBAAqB,GAAGC,KAAK,IAAI;IACrCf,mBAAmB,CAACe,KAAK,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAGN,CAAC,IAAI;IACpB,MAAMP,SAAS,GAAGO,CAAC,CAACO,aAAa,CAACZ,KAAK;IACvCL,mBAAmB,CAAC,CAAC,CAAC;IACtBE,kBAAkB,CAAC,IAAI,CAAC;IACxBE,YAAY,CAACD,SAAS,CAAC;IACvB,IAAIO,CAAC,CAACQ,MAAM,CAACb,KAAK,GAAG,CAAC,EAAE;MACtBH,kBAAkB,CAAC,KAAK,CAAC;IAC3B;EACF,CAAC;;EAED;EACA,MAAMiB,YAAY,GAAGT,CAAC,IAAI;IACxBA,CAAC,CAACU,eAAe,EAAE;EACrB,CAAC;;EAED;EACA,MAAMC,SAAS,GAAGX,CAAC,IAAI;IACrB,MAAMC,SAAS,GAAGlB,KAAK,CAACkB,SAAS;IACjC,MAAMW,cAAc,GAAGzC,QAAQ,CAAC0C,WAAW,CAAC3B,kBAAkB,CAAC4B,OAAO,CAAC;;IAEvE;IACA,IAAId,CAAC,CAACe,OAAO,KAAK,EAAE,IAAI1B,gBAAgB,KAAK,CAAC,EAAE;MAC9CC,mBAAmB,CAACD,gBAAgB,GAAG,CAAC,CAAC;MAEzC,IAAIW,CAAC,CAACQ,MAAM,CAACb,KAAK,CAACqB,MAAM,GAAG,CAAC,CAAC,IAAIJ,cAAc,KAAK,IAAI,IAAIvB,gBAAgB,IAAIQ,YAAY,CAACmB,MAAM,GAAG,CAAC,EAAE;QACxGJ,cAAc,CAACK,SAAS,GAAG,CAAC;MAC9B;IACF,CAAC,MAAM,IAAIjB,CAAC,CAACe,OAAO,KAAK,EAAE,IAAI1B,gBAAgB,GAAGQ,YAAY,CAACmB,MAAM,GAAG,CAAC,EAAE;MACzE;MACA1B,mBAAmB,CAACD,gBAAgB,GAAG,CAAC,CAAC;MAEzC,IAAIW,CAAC,CAACQ,MAAM,CAACb,KAAK,CAACqB,MAAM,GAAG,CAAC,CAAC,IAAIJ,cAAc,KAAK,IAAI,IAAIvB,gBAAgB,IAAIQ,YAAY,CAACmB,MAAM,GAAG,CAAC,EAAE;QACxGJ,cAAc,CAACK,SAAS,GAAGL,cAAc,CAACM,YAAY;MACxD;IACF,CAAC,MAAM,IAAIlB,CAAC,CAACe,OAAO,KAAK,EAAE,EAAE;MAC3B;MACAvB,kBAAkB,CAAC,KAAK,CAAC;MACzBE,YAAY,CAAC,EAAE,CAAC;IAClB,CAAC,MAAM,IAAIM,CAAC,CAACe,OAAO,KAAK,EAAE,IAAIxB,eAAe,EAAE;MAC9C;MACAO,qBAAqB,CAACD,YAAY,CAACR,gBAAgB,CAAC,CAAC8B,IAAI,EAAEnB,CAAC,CAAC;MAC7DN,YAAY,CAACG,YAAY,CAACR,gBAAgB,CAAC,CAACY,SAAS,CAAC,CAAC;MACvDT,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC,MAAM;MACL;IACF;;IAEA;IACA,IAAIT,KAAK,CAAC4B,SAAS,KAAKT,SAAS,IAAInB,KAAK,CAAC4B,SAAS,KAAK,IAAI,EAAE;MAC7D5B,KAAK,CAAC4B,SAAS,CAACX,CAAC,EAAEP,SAAS,CAAC;IAC/B;EACF,CAAC;;EAED;EACA,MAAM2B,uBAAuB,GAAGC,GAAG,IAAI;IACrC,MAAM;MAAEpB,SAAS;MAAEqB;IAAa,CAAC,GAAGvC,KAAK;IAEzC,MAAMwC,gBAAgB,GAAG,CAACC,IAAI,EAAEC,CAAC,KAAK;MACpC,IAAI,CAACH,YAAY,EAAE;QACjB,MAAMI,aAAa,GAAGF,IAAI,CAACL,IAAI,KAAKjB,SAAS,IAAIsB,IAAI,CAACL,IAAI,KAAK,IAAI,GAAGK,IAAI,CAACL,IAAI,GAAG,IAAI;QACtF,oBACE;UACE,SAAS,EAAEzC,UAAU,CAAC,iBAAiB,EAAE;YACvCiD,MAAM,EAAE9B,YAAY,CAAC+B,OAAO,CAACJ,IAAI,CAAC,KAAKnC;UACzC,CAAC,CAAE;UAEH,OAAO,EAAEW,CAAC,IAAIF,qBAAqB,CAAC4B,aAAa,EAAE1B,CAAC,CAAE;UACtD,YAAY,EAAE,MAAM;YAClBI,qBAAqB,CAACP,YAAY,CAAC+B,OAAO,CAACJ,IAAI,CAAC,CAAC;UACnD,CAAE;UAAA,UAEDA,IAAI,CAACvB,SAAS;QAAC,GANXuB,IAAI,CAACvB,SAAS,CAAC;UAAA;UAAA;UAAA;QAAA,QAOjB;MAET,CAAC,MAAM,IAAIqB,YAAY,EAAE;QACvB,OAAOA,YAAY,CACjBE,IAAI,EACJC,CAAC,EACD5B,YAAY,EACZR,gBAAgB,EAChBS,qBAAqB,EACrBM,qBAAqB,EACrBX,SAAS,CACV;MACH,CAAC,MAAM;QACL,OAAO,IAAI;MACb;IACF,CAAC;IAED,OAAO4B,GAAG,CAACQ,GAAG,CAAC,CAACL,IAAI,EAAEC,CAAC,KAAK;MAC1B,OAAOF,gBAAgB,CAACC,IAAI,EAAEC,CAAC,CAAC;IAClC,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMK,0BAA0B,GAAG,MAAM;IACvC,MAAM;MAAE7B,SAAS;MAAE8B,WAAW;MAAET,YAAY;MAAEU;IAAgB,CAAC,GAAGjD,KAAK;IAEvEc,YAAY,GAAG,EAAE;IACjB,MAAMoC,cAAc,GAAGF,WAAW,CAC/BG,MAAM,CAACT,CAAC,IAAI;MACX,MAAMU,cAAc,GAAGV,CAAC,CAACxB,SAAS,CAAC,CAACmC,WAAW,EAAE,CAACC,UAAU,CAAC5C,SAAS,CAAC2C,WAAW,EAAE,CAAC;QACnFE,gBAAgB,GAAGb,CAAC,CAACxB,SAAS,CAAC,CAACmC,WAAW,EAAE,CAACG,QAAQ,CAAC9C,SAAS,CAAC2C,WAAW,EAAE,CAAC;MACjF,IAAID,cAAc,EAAE;QAClB,OAAOA,cAAc;MACvB,CAAC,MAAM,IAAI,CAACA,cAAc,IAAIG,gBAAgB,EAAE;QAC9C,OAAOA,gBAAgB;MACzB,CAAC,MAAM;QACL,OAAO,IAAI;MACb;IACF,CAAC,CAAC,CACDE,KAAK,CAAC,CAAC,EAAER,eAAe,CAAC;IAC5BnC,YAAY,CAAC4C,IAAI,CAAC,GAAGR,cAAc,CAAC;IACpC,IAAIA,cAAc,CAACjB,MAAM,EAAE;MACzB,OAAOiB,cAAc,CAACJ,GAAG,CAAC,CAACa,UAAU,EAAErC,KAAK,KAAK;QAC/C,MAAMqB,aAAa,GAAGgB,UAAU,CAACvB,IAAI,KAAKjB,SAAS,IAAIwC,UAAU,CAACvB,IAAI,KAAK,IAAI,GAAGuB,UAAU,CAACvB,IAAI,GAAG,IAAI;QACxG,IAAI,CAACG,YAAY,EAAE;UACjB,oBACE;YACE,SAAS,EAAE5C,UAAU,CAAC,iBAAiB,EAAE;cACvCiD,MAAM,EAAE9B,YAAY,CAAC+B,OAAO,CAACc,UAAU,CAAC,KAAKrD;YAC/C,CAAC,CAAE;YAEH,OAAO,EAAEW,CAAC,IAAIF,qBAAqB,CAAC4B,aAAa,EAAE1B,CAAC,CAAE;YACtD,YAAY,EAAE,MAAMI,qBAAqB,CAACP,YAAY,CAAC+B,OAAO,CAACc,UAAU,CAAC,CAAE;YAAA,UAE3EA,UAAU,CAACzC,SAAS;UAAC,GAJjByC,UAAU,CAACzC,SAAS,CAAC;YAAA;YAAA;YAAA;UAAA,QAKvB;QAET,CAAC,MAAM,IAAIqB,YAAY,EAAE;UACvB,OAAOA,YAAY,CACjBoB,UAAU,EACVrC,KAAK,EACLR,YAAY,EACZR,gBAAgB,EAChBS,qBAAqB,EACrBM,qBAAqB,EACrBX,SAAS,CACV;QACH,CAAC,MAAM;UACL,OAAO,IAAI;QACb;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,oBACE;QAAI,SAAS,EAAC,2BAA2B;QAAA,wBACvC,QAAC,WAAW;UAAC,IAAI,EAAE;QAAG;UAAA;UAAA;UAAA;QAAA,QAAG,oBAAC;UAAM,SAAS,EAAC,oBAAoB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5E;IAET;EACF,CAAC;;EAED;EACA,MAAMkD,iBAAiB,GAAG,MAAM;IAC9B,MAAM;MAAE1C,SAAS;MAAE2C,OAAO;MAAEC,eAAe;MAAEd;IAAY,CAAC,GAAGhD,KAAK;;IAElE;IACA,IAAI6D,OAAO,KAAK1C,SAAS,IAAI0C,OAAO,KAAK,IAAI,IAAI,CAACA,OAAO,EAAE;MACzD,OAAOd,0BAA0B,EAAE;IACrC,CAAC,MAAM;MACLjC,YAAY,GAAG,EAAE;MACjB,OAAOkC,WAAW,CAACF,GAAG,CAACa,UAAU,IAAI;QACnC,MAAMI,QAAQ,GAAGJ,UAAU,CAACK,IAAI,CAC7Bb,MAAM,CAACT,CAAC,IAAI;UACX,MAAMU,cAAc,GAAGV,CAAC,CAACxB,SAAS,CAAC,CAACmC,WAAW,EAAE,CAACC,UAAU,CAAC5C,SAAS,CAAC2C,WAAW,EAAE,CAAC;YACnFE,gBAAgB,GAAGb,CAAC,CAACxB,SAAS,CAAC,CAACmC,WAAW,EAAE,CAACG,QAAQ,CAAC9C,SAAS,CAAC2C,WAAW,EAAE,CAAC;UACjF,IAAID,cAAc,EAAE;YAClB,OAAOA,cAAc;UACvB,CAAC,MAAM,IAAI,CAACA,cAAc,IAAIG,gBAAgB,EAAE;YAC9C,OAAOA,gBAAgB;UACzB,CAAC,MAAM;YACL,OAAO,IAAI;UACb;QACF,CAAC,CAAC,CACDE,KAAK,CAAC,CAAC,EAAEE,UAAU,CAACM,WAAW,CAAC;QAEnCnD,YAAY,CAAC4C,IAAI,CAAC,GAAGK,QAAQ,CAAC;QAC9B,oBACE,QAAC,QAAQ;UAAA,wBACP;YAAI,SAAS,EAAC,0CAA0C;YAAA,uBACtD;cAAI,SAAS,EAAC,kBAAkB;cAAA,UAAEJ,UAAU,CAACG,eAAe;YAAC;cAAA;cAAA;cAAA;YAAA;UAAM;YAAA;YAAA;YAAA;UAAA,QAChE,EACJC,QAAQ,CAAC9B,MAAM,GACdI,uBAAuB,CAAC0B,QAAQ,CAAC,gBAEjC;YAAI,SAAS,EAAC,2BAA2B;YAAA,wBACvC,QAAC,WAAW;cAAC,IAAI,EAAE;YAAG;cAAA;cAAA;cAAA;YAAA,QAAG,oBAAC;cAAM,SAAS,EAAC,oBAAoB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAiB;UAAA;YAAA;YAAA;YAAA;UAAA,QAElF;QAAA,GAVYJ,UAAU,CAACG,eAAe,CAAC;UAAA;UAAA;UAAA;QAAA,QAW/B;MAEf,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;EACAvE,SAAS,CAAC,MAAM;IACd,IAAIS,KAAK,CAACkE,kBAAkB,IAAI9D,OAAO,EAAE;MACvCK,kBAAkB,CAAC,IAAI,CAAC;IAC1B;EACF,CAAC,EAAE,CAACL,OAAO,EAAEJ,KAAK,CAACkE,kBAAkB,CAAC,CAAC;;EAEvC;EACA3E,SAAS,CAAC,MAAM;IACd,MAAM4E,SAAS,GAAG/E,QAAQ,CAAC0C,WAAW,CAAC5B,UAAU,CAAC6B,OAAO,CAAC;;IAE1D;IACA,IAAIoC,SAAS,KAAK,IAAI,IAAInE,KAAK,CAACoE,SAAS,EAAE;MACzClE,UAAU,CAAC6B,OAAO,CAACsC,KAAK,EAAE;IAC5B;;IAEA;IACA,IAAIrE,KAAK,CAACkE,kBAAkB,IAAI9D,OAAO,EAAE;MACvCK,kBAAkB,CAAC,IAAI,CAAC;IAC1B;;IAEA;IACA,IAAIT,KAAK,CAACsE,UAAU,EAAE;MACpBtE,KAAK,CAACsE,UAAU,CAAC5D,SAAS,EAAEC,YAAY,CAAC;IAC3C;;IAEA;IACA,IAAIX,KAAK,CAACuE,kBAAkB,IAAI/D,eAAe,EAAE;MAC/CR,KAAK,CAACuE,kBAAkB,CAAC7D,SAAS,CAAC;IACrC;EACF,CAAC,EAAE,CAACD,kBAAkB,EAAEL,OAAO,EAAEM,SAAS,EAAEF,eAAe,EAAER,KAAK,CAAC,CAAC;;EAEpE;EACAF,iBAAiB,CAACG,SAAS,EAAE,MAAM;IACjCQ,kBAAkB,CAAC,KAAK,CAAC;IACzB,IAAIT,KAAK,CAACwE,aAAa,EAAE;MACvBxE,KAAK,CAACwE,aAAa,EAAE;IACvB;EACF,CAAC,CAAC;EAEF,IAAIC,wBAAwB;EAE5B,IAAIjE,eAAe,EAAE;IACnBiE,wBAAwB,gBACtB,QAAC,gBAAgB;MACf,SAAS,EAAE9E,UAAU,CAAC,kBAAkB,EAAE;QACxC,CAACK,KAAK,CAAC0E,YAAY,GAAG1E,KAAK,CAAC0E;MAC9B,CAAC,CAAE;MACH,GAAG,EAAEvE,kBAAmB;MACxB,SAAS,EAAC,IAAI;MACd,OAAO,EAAE;QAAEwE,gBAAgB,EAAE;MAAM,CAAE;MAAA,UAEpCf,iBAAiB;IAAE;MAAA;MAAA;MAAA;IAAA,QAEvB;EACH;EAEA,oBACE;IAAK,SAAS,EAAC,wBAAwB;IAAC,GAAG,EAAE3D,SAAU;IAAA,wBACrD;MACE,IAAI,EAAC,MAAM;MACX,QAAQ,EAAEgB,CAAC,IAAI;QACbM,QAAQ,CAACN,CAAC,CAAC;QACX,IAAIjB,KAAK,CAACuB,QAAQ,EAAE;UAClBvB,KAAK,CAACuB,QAAQ,CAACN,CAAC,CAAC;QACnB;MACF,CAAE;MACF,SAAS,EAAEA,CAAC,IAAIW,SAAS,CAACX,CAAC,CAAE;MAC7B,KAAK,EAAEP,SAAU;MACjB,SAAS,EAAG,uBAAsBV,KAAK,CAAC4E,SAAS,GAAG5E,KAAK,CAAC4E,SAAS,GAAG,EAAG,EAAE;MAC3E,WAAW,EAAE5E,KAAK,CAAC6E,WAAY;MAC/B,OAAO,EAAEnD,YAAa;MACtB,GAAG,EAAExB,UAAW;MAChB,OAAO,EAAE,MAAMG,UAAU,CAAC,IAAI,CAAE;MAChC,SAAS,EAAEL,KAAK,CAACoE,SAAU;MAC3B,MAAM,EAAEnD,CAAC,IAAI;QACX,IAAIjB,KAAK,CAAC8E,MAAM,EAAE9E,KAAK,CAAC8E,MAAM,CAAC7D,CAAC,CAAC;QACjCZ,UAAU,CAAC,KAAK,CAAC;MACnB;IAAE;MAAA;MAAA;MAAA;IAAA,QACF,EACDoE,wBAAwB;EAAA;IAAA;IAAA;IAAA;EAAA,QACrB;AAEV,CAAC;AAAA,GA1TK1E,YAAY;EAAA,QAaCV,WAAW,EA2P5BS,iBAAiB;AAAA;AAAA,KAxQbC,YAAY;AA4TlB,eAAeA,YAAY;;AAE3B;AACAA,YAAY,CAACgF,SAAS,GAAG;EACvBlB,OAAO,EAAEnE,SAAS,CAACsF,IAAI;EACvBZ,SAAS,EAAE1E,SAAS,CAACsF,IAAI;EACzBpD,SAAS,EAAElC,SAAS,CAACuF,IAAI;EACzB1D,QAAQ,EAAE7B,SAAS,CAACuF,IAAI;EACxBX,UAAU,EAAE5E,SAAS,CAACuF,IAAI;EAC1BJ,WAAW,EAAEnF,SAAS,CAACwF,MAAM;EAC7BV,aAAa,EAAE9E,SAAS,CAACuF,IAAI;EAC7BE,YAAY,EAAEzF,SAAS,CAACwF,MAAM;EAC9BR,YAAY,EAAEhF,SAAS,CAACwF,MAAM;EAC9BpB,eAAe,EAAEpE,SAAS,CAACwF,MAAM;EACjCjC,eAAe,EAAEvD,SAAS,CAAC0F,MAAM;EACjCb,kBAAkB,EAAE7E,SAAS,CAACuF,IAAI;EAClClE,qBAAqB,EAAErB,SAAS,CAACuF,IAAI;EACrC/D,SAAS,EAAExB,SAAS,CAACwF,MAAM,CAACG,UAAU;EACtCrC,WAAW,EAAEtD,SAAS,CAAC4F,KAAK,CAACD;AAC/B,CAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}