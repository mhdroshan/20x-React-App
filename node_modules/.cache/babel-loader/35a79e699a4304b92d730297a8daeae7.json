{"ast":null,"code":"var _jsxFileName = \"/Users/admin/full-version/src/views/components/modal/ModalThemes.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { useState } from 'react';\n\n// ** Reactstrap Imports\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalConfig = [{\n  id: 1,\n  title: 'Primary',\n  modalColor: 'modal-primary',\n  btnColor: 'primary'\n}, {\n  id: 2,\n  title: 'Secondary',\n  modalColor: 'modal-secondary',\n  btnColor: 'secondary'\n}, {\n  id: 3,\n  title: 'Success',\n  modalColor: 'modal-success',\n  btnColor: 'success'\n}, {\n  id: 4,\n  title: 'Danger',\n  modalColor: 'modal-danger',\n  btnColor: 'danger'\n}, {\n  id: 5,\n  title: 'Warning',\n  modalColor: 'modal-warning',\n  btnColor: 'warning'\n}, {\n  id: 6,\n  title: 'Info',\n  modalColor: 'modal-info',\n  btnColor: 'info'\n}, {\n  id: 7,\n  title: 'Dark',\n  modalColor: 'modal-dark',\n  btnColor: 'dark'\n}];\nconst ModalTheme = () => {\n  _s();\n  // ** State\n  const [modal, setModal] = useState(null);\n  const toggleModal = id => {\n    if (modal !== id) {\n      setModal(id);\n    } else {\n      setModal(null);\n    }\n  };\n  const renderModal = ModalConfig.map(item => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `theme-${item.modalColor}`,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: item.btnColor,\n        onClick: () => toggleModal(item.id),\n        outline: true,\n        children: item.title\n      }, item.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modal === item.id,\n        toggle: () => toggleModal(item.id),\n        className: \"modal-dialog-centered\",\n        modalClassName: item.modalColor,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: () => toggleModal(item.id),\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: \"Tart lemon drops macaroon oat cake chocolate toffee chocolate bar icing. Pudding jelly beans carrot cake pastry gummies cheesecake lollipop. I love cookie lollipop cake I love sweet gummi bears cupcake dessert.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: item.btnColor,\n            onClick: () => toggleModal(item.id),\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"demo-inline-spacing\",\n    children: renderModal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 10\n  }, this);\n};\n_s(ModalTheme, \"+2xwMS3J0RcBA0qWw62dnTGSPTE=\");\n_c = ModalTheme;\nexport default ModalTheme;\nvar _c;\n$RefreshReg$(_c, \"ModalTheme\");","map":{"version":3,"names":["useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","ModalConfig","id","title","modalColor","btnColor","ModalTheme","modal","setModal","toggleModal","renderModal","map","item"],"sources":["/Users/admin/full-version/src/views/components/modal/ModalThemes.js"],"sourcesContent":["// ** React Imports\nimport { useState } from 'react'\n\n// ** Reactstrap Imports\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\n\nconst ModalConfig = [\n  {\n    id: 1,\n    title: 'Primary',\n    modalColor: 'modal-primary',\n    btnColor: 'primary'\n  },\n  {\n    id: 2,\n    title: 'Secondary',\n    modalColor: 'modal-secondary',\n    btnColor: 'secondary'\n  },\n  {\n    id: 3,\n    title: 'Success',\n    modalColor: 'modal-success',\n    btnColor: 'success'\n  },\n  {\n    id: 4,\n    title: 'Danger',\n    modalColor: 'modal-danger',\n    btnColor: 'danger'\n  },\n  {\n    id: 5,\n    title: 'Warning',\n    modalColor: 'modal-warning',\n    btnColor: 'warning'\n  },\n  {\n    id: 6,\n    title: 'Info',\n    modalColor: 'modal-info',\n    btnColor: 'info'\n  },\n  {\n    id: 7,\n    title: 'Dark',\n    modalColor: 'modal-dark',\n    btnColor: 'dark'\n  }\n]\n\nconst ModalTheme = () => {\n  // ** State\n  const [modal, setModal] = useState(null)\n\n  const toggleModal = id => {\n    if (modal !== id) {\n      setModal(id)\n    } else {\n      setModal(null)\n    }\n  }\n\n  const renderModal = ModalConfig.map(item => {\n    return (\n      <div className={`theme-${item.modalColor}`} key={item.id}>\n        <Button color={item.btnColor} onClick={() => toggleModal(item.id)} key={item.title} outline>\n          {item.title}\n        </Button>\n        <Modal\n          isOpen={modal === item.id}\n          toggle={() => toggleModal(item.id)}\n          className='modal-dialog-centered'\n          modalClassName={item.modalColor}\n          key={item.id}\n        >\n          <ModalHeader toggle={() => toggleModal(item.id)}>{item.title}</ModalHeader>\n          <ModalBody>\n            Tart lemon drops macaroon oat cake chocolate toffee chocolate bar icing. Pudding jelly beans carrot cake\n            pastry gummies cheesecake lollipop. I love cookie lollipop cake I love sweet gummi bears cupcake dessert.\n          </ModalBody>\n          <ModalFooter>\n            <Button color={item.btnColor} onClick={() => toggleModal(item.id)}>\n              Accept\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    )\n  })\n\n  return <div className='demo-inline-spacing'>{renderModal}</div>\n}\nexport default ModalTheme\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AACA,SAASC,MAAM,EAAEC,KAAK,EAAEC,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,YAAY;AAAA;AAE/E,MAAMC,WAAW,GAAG,CAClB;EACEC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,SAAS;EAChBC,UAAU,EAAE,eAAe;EAC3BC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,WAAW;EAClBC,UAAU,EAAE,iBAAiB;EAC7BC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,SAAS;EAChBC,UAAU,EAAE,eAAe;EAC3BC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,QAAQ;EACfC,UAAU,EAAE,cAAc;EAC1BC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,SAAS;EAChBC,UAAU,EAAE,eAAe;EAC3BC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,MAAM;EACbC,UAAU,EAAE,YAAY;EACxBC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,MAAM;EACbC,UAAU,EAAE,YAAY;EACxBC,QAAQ,EAAE;AACZ,CAAC,CACF;AAED,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMc,WAAW,GAAGP,EAAE,IAAI;IACxB,IAAIK,KAAK,KAAKL,EAAE,EAAE;MAChBM,QAAQ,CAACN,EAAE,CAAC;IACd,CAAC,MAAM;MACLM,QAAQ,CAAC,IAAI,CAAC;IAChB;EACF,CAAC;EAED,MAAME,WAAW,GAAGT,WAAW,CAACU,GAAG,CAACC,IAAI,IAAI;IAC1C,oBACE;MAAK,SAAS,EAAG,SAAQA,IAAI,CAACR,UAAW,EAAE;MAAA,wBACzC,QAAC,MAAM;QAAC,KAAK,EAAEQ,IAAI,CAACP,QAAS;QAAC,OAAO,EAAE,MAAMI,WAAW,CAACG,IAAI,CAACV,EAAE,CAAE;QAAkB,OAAO;QAAA,UACxFU,IAAI,CAACT;MAAK,GAD2DS,IAAI,CAACT,KAAK;QAAA;QAAA;QAAA;MAAA,QAEzE,eACT,QAAC,KAAK;QACJ,MAAM,EAAEI,KAAK,KAAKK,IAAI,CAACV,EAAG;QAC1B,MAAM,EAAE,MAAMO,WAAW,CAACG,IAAI,CAACV,EAAE,CAAE;QACnC,SAAS,EAAC,uBAAuB;QACjC,cAAc,EAAEU,IAAI,CAACR,UAAW;QAAA,wBAGhC,QAAC,WAAW;UAAC,MAAM,EAAE,MAAMK,WAAW,CAACG,IAAI,CAACV,EAAE,CAAE;UAAA,UAAEU,IAAI,CAACT;QAAK;UAAA;UAAA;UAAA;QAAA,QAAe,eAC3E,QAAC,SAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAGE,eACZ,QAAC,WAAW;UAAA,uBACV,QAAC,MAAM;YAAC,KAAK,EAAES,IAAI,CAACP,QAAS;YAAC,OAAO,EAAE,MAAMI,WAAW,CAACG,IAAI,CAACV,EAAE,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAEzD;UAAA;UAAA;UAAA;QAAA,QACG;MAAA,GAXTU,IAAI,CAACV,EAAE;QAAA;QAAA;QAAA;MAAA,QAYN;IAAA,GArBuCU,IAAI,CAACV,EAAE;MAAA;MAAA;MAAA;IAAA,QAsBlD;EAEV,CAAC,CAAC;EAEF,oBAAO;IAAK,SAAS,EAAC,qBAAqB;IAAA,UAAEQ;EAAW;IAAA;IAAA;IAAA;EAAA,QAAO;AACjE,CAAC;AAAA,GAzCKJ,UAAU;AAAA,KAAVA,UAAU;AA0ChB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}