{"ast":null,"code":"var _jsxFileName = \"/Users/admin/full-version/src/views/components/accordion/AccordionControlled.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { useState } from 'react';\n\n// ** Reactstrap Imports\nimport { Accordion, AccordionBody, AccordionHeader, AccordionItem } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccordionControlled = () => {\n  _s();\n  // ** State\n  const [open, setOpen] = useState('1');\n  const toggle = id => {\n    open === id ? setOpen() : setOpen(id);\n  };\n  return /*#__PURE__*/_jsxDEV(Accordion, {\n    open: open,\n    toggle: toggle,\n    children: [/*#__PURE__*/_jsxDEV(AccordionItem, {\n      children: [/*#__PURE__*/_jsxDEV(AccordionHeader, {\n        targetId: \"1\",\n        children: \"Accordion Item 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccordionBody, {\n        accordionId: \"1\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"This is the first item's accordion body.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), \" You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"<AccordionBody>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), \", though the transition does limit overflow.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccordionItem, {\n      children: [/*#__PURE__*/_jsxDEV(AccordionHeader, {\n        targetId: \"2\",\n        children: \"Accordion Item 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccordionBody, {\n        accordionId: \"2\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"This is the second item's accordion body.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), \" You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"<AccordionBody>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), \", though the transition does limit overflow.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccordionItem, {\n      children: [/*#__PURE__*/_jsxDEV(AccordionHeader, {\n        targetId: \"3\",\n        children: \"Accordion Item 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccordionBody, {\n        accordionId: \"3\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"This is the third item's accordion body.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), \" You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"<AccordionBody>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), \", though the transition does limit overflow.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(AccordionControlled, \"xAIfVgvFJ6GAJ9vUUusRBV+vZ1E=\");\n_c = AccordionControlled;\nexport default AccordionControlled;\nvar _c;\n$RefreshReg$(_c, \"AccordionControlled\");","map":{"version":3,"names":["useState","Accordion","AccordionBody","AccordionHeader","AccordionItem","AccordionControlled","open","setOpen","toggle","id"],"sources":["/Users/admin/full-version/src/views/components/accordion/AccordionControlled.js"],"sourcesContent":["// ** React Imports\nimport { useState } from 'react'\n\n// ** Reactstrap Imports\nimport { Accordion, AccordionBody, AccordionHeader, AccordionItem } from 'reactstrap'\n\nconst AccordionControlled = () => {\n  // ** State\n  const [open, setOpen] = useState('1')\n\n  const toggle = id => {\n    open === id ? setOpen() : setOpen(id)\n  }\n\n  return (\n    <Accordion open={open} toggle={toggle}>\n      <AccordionItem>\n        <AccordionHeader targetId='1'>Accordion Item 1</AccordionHeader>\n        <AccordionBody accordionId='1'>\n          <strong>This is the first item's accordion body.</strong> You can modify any of this with custom CSS or\n          overriding our default variables. It's also worth noting that just about any HTML can go within the{' '}\n          <code>&lt;AccordionBody&gt;</code>, though the transition does limit overflow.\n        </AccordionBody>\n      </AccordionItem>\n      <AccordionItem>\n        <AccordionHeader targetId='2'>Accordion Item 2</AccordionHeader>\n        <AccordionBody accordionId='2'>\n          <strong>This is the second item's accordion body.</strong> You can modify any of this with custom CSS or\n          overriding our default variables. It's also worth noting that just about any HTML can go within the{' '}\n          <code>&lt;AccordionBody&gt;</code>, though the transition does limit overflow.\n        </AccordionBody>\n      </AccordionItem>\n      <AccordionItem>\n        <AccordionHeader targetId='3'>Accordion Item 3</AccordionHeader>\n        <AccordionBody accordionId='3'>\n          <strong>This is the third item's accordion body.</strong> You can modify any of this with custom CSS or\n          overriding our default variables. It's also worth noting that just about any HTML can go within the{' '}\n          <code>&lt;AccordionBody&gt;</code>, though the transition does limit overflow.\n        </AccordionBody>\n      </AccordionItem>\n    </Accordion>\n  )\n}\n\nexport default AccordionControlled\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AACA,SAASC,SAAS,EAAEC,aAAa,EAAEC,eAAe,EAAEC,aAAa,QAAQ,YAAY;AAAA;AAErF,MAAMC,mBAAmB,GAAG,MAAM;EAAA;EAChC;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,GAAG,CAAC;EAErC,MAAMQ,MAAM,GAAGC,EAAE,IAAI;IACnBH,IAAI,KAAKG,EAAE,GAAGF,OAAO,EAAE,GAAGA,OAAO,CAACE,EAAE,CAAC;EACvC,CAAC;EAED,oBACE,QAAC,SAAS;IAAC,IAAI,EAAEH,IAAK;IAAC,MAAM,EAAEE,MAAO;IAAA,wBACpC,QAAC,aAAa;MAAA,wBACZ,QAAC,eAAe;QAAC,QAAQ,EAAC,GAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmC,eAChE,QAAC,aAAa;QAAC,WAAW,EAAC,GAAG;QAAA,wBAC5B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAyD,wJAC2C,GAAG,eACvG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAkC;MAAA;QAAA;QAAA;QAAA;MAAA,QACpB;IAAA;MAAA;MAAA;MAAA;IAAA,QACF,eAChB,QAAC,aAAa;MAAA,wBACZ,QAAC,eAAe;QAAC,QAAQ,EAAC,GAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmC,eAChE,QAAC,aAAa;QAAC,WAAW,EAAC,GAAG;QAAA,wBAC5B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA0D,wJAC0C,GAAG,eACvG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAkC;MAAA;QAAA;QAAA;QAAA;MAAA,QACpB;IAAA;MAAA;MAAA;MAAA;IAAA,QACF,eAChB,QAAC,aAAa;MAAA,wBACZ,QAAC,eAAe;QAAC,QAAQ,EAAC,GAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmC,eAChE,QAAC,aAAa;QAAC,WAAW,EAAC,GAAG;QAAA,wBAC5B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAyD,wJAC2C,GAAG,eACvG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAkC;MAAA;QAAA;QAAA;QAAA;MAAA,QACpB;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAEhB,CAAC;AAAA,GApCKH,mBAAmB;AAAA,KAAnBA,mBAAmB;AAsCzB,eAAeA,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}