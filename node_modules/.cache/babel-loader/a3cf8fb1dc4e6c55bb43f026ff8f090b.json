{"ast":null,"code":"var _jsxFileName = \"/Users/admin/full-version/src/views/apps/todo/TaskSidebar.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { useState, Fragment } from 'react';\n\n// ** Third Party Components\nimport classnames from 'classnames';\nimport Flatpickr from 'react-flatpickr';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { X, Star, Trash } from 'react-feather';\nimport Select, { components } from 'react-select'; //eslint-disable-line\nimport { useForm, Controller } from 'react-hook-form';\nimport { EditorState, ContentState } from 'draft-js';\n\n// ** Reactstrap Imports\nimport { Modal, ModalBody, Button, Form, Input, Label, FormFeedback } from 'reactstrap';\n\n// ** Utils\nimport { isObjEmpty, selectThemeColors } from '@utils';\n\n// ** Assignee Avatars\nimport img1 from '@src/assets/images/portrait/small/avatar-s-3.jpg';\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg';\nimport img3 from '@src/assets/images/portrait/small/avatar-s-4.jpg';\nimport img4 from '@src/assets/images/portrait/small/avatar-s-6.jpg';\nimport img5 from '@src/assets/images/portrait/small/avatar-s-2.jpg';\nimport img6 from '@src/assets/images/portrait/small/avatar-s-11.jpg';\n\n// ** Styles Imports\nimport '@styles/react/libs/editor/editor.scss';\nimport '@styles/react/libs/flatpickr/flatpickr.scss';\nimport '@styles/react/libs/react-select/_react-select.scss';\n\n// ** Function to capitalize the first letter of string\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst capitalize = string => string.charAt(0).toUpperCase() + string.slice(1);\n\n// ** Modal Header\nconst ModalHeader = props => {\n  // ** Props\n  const {\n    children,\n    store,\n    handleTaskSidebar,\n    setDeleted,\n    deleted,\n    important,\n    setImportant,\n    deleteTask,\n    dispatch\n  } = props;\n\n  // ** Function to delete task\n  const handleDeleteTask = () => {\n    setDeleted(!deleted);\n    dispatch(deleteTask(store.selectedTask.id));\n    handleTaskSidebar();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-header d-flex align-items-center justify-content-between mb-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"modal-title\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-item-action d-flex align-items-center\",\n      children: [store && !isObjEmpty(store.selectedTask) ? /*#__PURE__*/_jsxDEV(Trash, {\n        className: \"cursor-pointer mt-25\",\n        size: 16,\n        onClick: () => handleDeleteTask()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"todo-item-favorite cursor-pointer mx-75\",\n        children: /*#__PURE__*/_jsxDEV(Star, {\n          size: 16,\n          onClick: () => setImportant(!important),\n          className: classnames({\n            'text-warning': important === true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(X, {\n        className: \"fw-normal mt-25\",\n        size: 16,\n        onClick: handleTaskSidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c = ModalHeader;\nconst TaskSidebar = props => {\n  _s();\n  // ** Props\n  const {\n    open,\n    handleTaskSidebar,\n    store,\n    dispatch,\n    updateTask,\n    selectTask,\n    addTask,\n    deleteTask\n  } = props;\n\n  // ** States\n  const [assignee, setAssignee] = useState({\n    value: 'pheobe',\n    label: 'Pheobe Buffay',\n    img: img1\n  });\n  const [tags, setTags] = useState([]);\n  const [desc, setDesc] = useState(EditorState.createEmpty());\n  const [completed, setCompleted] = useState(false);\n  const [important, setImportant] = useState(false);\n  const [deleted, setDeleted] = useState(false);\n  const [dueDate, setDueDate] = useState(new Date());\n  const {\n    control,\n    setError,\n    setValue,\n    clearErrors,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      title: ''\n    }\n  });\n\n  // ** Assignee Select Options\n  const assigneeOptions = [{\n    value: 'pheobe',\n    label: 'Pheobe Buffay',\n    img: img1\n  }, {\n    value: 'chandler',\n    label: 'Chandler Bing',\n    img: img2\n  }, {\n    value: 'ross',\n    label: 'Ross Geller',\n    img: img3\n  }, {\n    value: 'monica',\n    label: 'Monica Geller',\n    img: img4\n  }, {\n    value: 'joey',\n    label: 'Joey Tribbiani',\n    img: img5\n  }, {\n    value: 'Rachel',\n    label: 'Rachel Green',\n    img: img6\n  }];\n\n  // ** Tag Select Options\n  const tagOptions = [{\n    value: 'team',\n    label: 'Team'\n  }, {\n    value: 'low',\n    label: 'Low'\n  }, {\n    value: 'medium',\n    label: 'Medium'\n  }, {\n    value: 'high',\n    label: 'High'\n  }, {\n    value: 'update',\n    label: 'Update'\n  }];\n\n  // ** Custom Assignee Component\n  const AssigneeComponent = _ref => {\n    let {\n      data,\n      ...props\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(components.Option, {\n      ...props,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"d-block rounded-circle me-50\",\n          src: data.img,\n          height: \"26\",\n          width: \"26\",\n          alt: data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-0\",\n          children: data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  };\n\n  // ** Returns sidebar title\n  const handleSidebarTitle = () => {\n    if (store && !isObjEmpty(store.selectedTask)) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        outline: true,\n        size: \"sm\",\n        onClick: () => setCompleted(!completed),\n        color: completed === true ? 'success' : 'secondary',\n        children: completed === true ? 'Completed' : 'Mark Complete'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this);\n    } else {\n      return 'Add Task';\n    }\n  };\n\n  // ** Function to run when sidebar opens\n  const handleSidebarOpened = () => {\n    const {\n      selectedTask\n    } = store;\n    if (!isObjEmpty(selectedTask)) {\n      setValue('title', selectedTask.title);\n      setCompleted(selectedTask.isCompleted);\n      setImportant(selectedTask.isImportant);\n      setAssignee([{\n        value: selectedTask.assignee.fullName,\n        label: selectedTask.assignee.fullName,\n        img: selectedTask.assignee.avatar\n      }]);\n      setDueDate(selectedTask.dueDate);\n      if (typeof selectedTask.description === 'string') {\n        setDesc(EditorState.createWithContent(ContentState.createFromText(selectedTask.description)));\n      } else {\n        const obj = selectedTask.description._immutable.currentContent.blockMap;\n        const property = Object.keys(obj).map(val => val);\n        setDesc(EditorState.createWithContent(ContentState.createFromText(obj[property].text)));\n      }\n      if (selectedTask.tags.length) {\n        const tags = [];\n        selectedTask.tags.map(tag => {\n          tags.push({\n            value: tag,\n            label: capitalize(tag)\n          });\n        });\n        setTags(tags);\n      }\n    }\n  };\n\n  // ** Function to run when sidebar closes\n  const handleSidebarClosed = () => {\n    setTags([]);\n    setDesc('');\n    setValue('title', '');\n    setAssignee({\n      value: 'pheobe',\n      label: 'Pheobe Buffay',\n      img: img1\n    });\n    setCompleted(false);\n    setImportant(false);\n    setDueDate(new Date());\n    dispatch(selectTask({}));\n    clearErrors();\n  };\n\n  // ** Function to reset fields\n  const handleResetFields = () => {\n    const descValue = EditorState.createWithContent(ContentState.createFromText(store.selectedTask.description));\n    setValue('title', store.selectedTask.title);\n    setDesc(descValue);\n    setCompleted(store.selectedTask.isCompleted);\n    setImportant(store.selectedTask.isImportant);\n    setDeleted(store.selectedTask.isDeleted);\n    setDueDate(store.selectedTask.dueDate);\n    if (store.selectedTask.assignee.fullName !== assignee.label) {\n      setAssignee({\n        value: store.selectedTask.assignee.fullName,\n        label: store.selectedTask.assignee.fullName,\n        img: store.selectedTask.assignee.avatar\n      });\n    }\n    if (store.selectedTask.tags.length) {\n      const tags = [];\n      store.selectedTask.tags.map(tag => {\n        tags.push({\n          value: tag,\n          label: capitalize(tag)\n        });\n      });\n      setTags(tags);\n    }\n  };\n\n  // ** Renders Footer Buttons\n  const renderFooterButtons = () => {\n    if (store && !isObjEmpty(store.selectedTask)) {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          className: \"update-btn update-todo-item me-1\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: handleResetFields,\n          outline: true,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          className: \"add-todo-item me-1\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: handleTaskSidebar,\n          outline: true,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const onSubmit = data => {\n    const newTaskTag = [];\n    const doesInclude = !isObjEmpty(store.selectedTask) && assignee.label === store.selectedTask.assignee.fullName;\n    if (tags.length) {\n      tags.map(tag => newTaskTag.push(tag.value));\n    }\n    const newAssignee = {\n      fullName: assignee.label,\n      avatar: assignee.img\n    };\n    const state = {\n      dueDate,\n      title: data.title,\n      tags: newTaskTag,\n      description: desc,\n      isCompleted: completed,\n      isDeleted: deleted,\n      isImportant: important,\n      assignee: doesInclude || assignee.label === undefined ? store.selectedTask.assignee : newAssignee\n    };\n    if (data.title.length) {\n      if (isObjEmpty(errors)) {\n        if (isObjEmpty(store.selectedTask) || !isObjEmpty(store.selectedTask) && !store.selectedTask.title.length) {\n          dispatch(addTask(state));\n        } else {\n          dispatch(updateTask({\n            ...state,\n            id: store.selectedTask.id\n          }));\n        }\n        handleTaskSidebar();\n      }\n    } else {\n      setError('title', {\n        type: 'manual'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: open,\n    toggle: handleTaskSidebar,\n    className: \"sidebar-lg\",\n    contentClassName: \"p-0\",\n    onOpened: handleSidebarOpened,\n    onClosed: handleSidebarClosed,\n    modalClassName: \"modal-slide-in sidebar-todo-modal\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      id: \"form-modal-todo\",\n      className: \"todo-modal\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        store: store,\n        deleted: deleted,\n        dispatch: dispatch,\n        important: important,\n        deleteTask: deleteTask,\n        setDeleted: setDeleted,\n        setImportant: setImportant,\n        handleTaskSidebar: handleTaskSidebar,\n        children: handleSidebarTitle()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        className: \"flex-grow-1 pb-sm-0 pb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"task-title\",\n            children: [\"Title \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"title\",\n            control: control,\n            render: _ref2 => {\n              let {\n                field\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(Input, {\n                id: \"task-title\",\n                placeholder: \"Title\",\n                className: \"new-todo-item-title\",\n                invalid: errors.title && true,\n                ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), errors.title && /*#__PURE__*/_jsxDEV(FormFeedback, {\n            children: \"Please enter a valid task title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"task-assignee\",\n            children: \"Assignee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"task-assignee\",\n            className: \"react-select\",\n            classNamePrefix: \"select\",\n            isClearable: false,\n            options: assigneeOptions,\n            theme: selectThemeColors,\n            value: assignee,\n            onChange: data => setAssignee(data),\n            components: {\n              Option: AssigneeComponent\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"due-date\",\n            children: \"Due Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flatpickr, {\n            id: \"due-date\",\n            name: \"due-date\",\n            className: \"form-control\",\n            onChange: date => setDueDate(date[0]),\n            value: dueDate,\n            options: {\n              dateFormat: 'Y-m-d'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"task-tags\",\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            isMulti: true,\n            id: \"task-tags\",\n            className: \"react-select\",\n            classNamePrefix: \"select\",\n            isClearable: false,\n            options: tagOptions,\n            theme: selectThemeColors,\n            value: tags,\n            onChange: data => {\n              setTags(data !== null ? [...data] : []);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"task-desc\",\n            className: \"form-label\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Editor, {\n            editorState: desc,\n            wrapperClassName: \"toolbar-bottom\",\n            toolbar: {\n              options: ['inline', 'textAlign'],\n              inline: {\n                inDropdown: false,\n                options: ['bold', 'italic', 'underline']\n              }\n            },\n            onEditorStateChange: data => setDesc(data)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: renderFooterButtons()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskSidebar, \"cW9qKq1NDLMFK1pdqOpJEHcYavM=\", false, function () {\n  return [useForm];\n});\n_c2 = TaskSidebar;\nexport default TaskSidebar;\nvar _c, _c2;\n$RefreshReg$(_c, \"ModalHeader\");\n$RefreshReg$(_c2, \"TaskSidebar\");","map":{"version":3,"names":["useState","Fragment","classnames","Flatpickr","Editor","X","Star","Trash","Select","components","useForm","Controller","EditorState","ContentState","Modal","ModalBody","Button","Form","Input","Label","FormFeedback","isObjEmpty","selectThemeColors","img1","img2","img3","img4","img5","img6","capitalize","string","charAt","toUpperCase","slice","ModalHeader","props","children","store","handleTaskSidebar","setDeleted","deleted","important","setImportant","deleteTask","dispatch","handleDeleteTask","selectedTask","id","TaskSidebar","open","updateTask","selectTask","addTask","assignee","setAssignee","value","label","img","tags","setTags","desc","setDesc","createEmpty","completed","setCompleted","dueDate","setDueDate","Date","control","setError","setValue","clearErrors","handleSubmit","formState","errors","defaultValues","title","assigneeOptions","tagOptions","AssigneeComponent","data","handleSidebarTitle","handleSidebarOpened","isCompleted","isImportant","fullName","avatar","description","createWithContent","createFromText","obj","_immutable","currentContent","blockMap","property","Object","keys","map","val","text","length","tag","push","handleSidebarClosed","handleResetFields","descValue","isDeleted","renderFooterButtons","onSubmit","newTaskTag","doesInclude","newAssignee","state","undefined","type","field","Option","date","dateFormat","options","inline","inDropdown"],"sources":["/Users/admin/full-version/src/views/apps/todo/TaskSidebar.js"],"sourcesContent":["// ** React Imports\nimport { useState, Fragment } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport Flatpickr from 'react-flatpickr'\nimport { Editor } from 'react-draft-wysiwyg'\nimport { X, Star, Trash } from 'react-feather'\nimport Select, { components } from 'react-select' //eslint-disable-line\nimport { useForm, Controller } from 'react-hook-form'\nimport { EditorState, ContentState } from 'draft-js'\n\n// ** Reactstrap Imports\nimport { Modal, ModalBody, Button, Form, Input, Label, FormFeedback } from 'reactstrap'\n\n// ** Utils\nimport { isObjEmpty, selectThemeColors } from '@utils'\n\n// ** Assignee Avatars\nimport img1 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\nimport img3 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\nimport img4 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\nimport img5 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\nimport img6 from '@src/assets/images/portrait/small/avatar-s-11.jpg'\n\n// ** Styles Imports\nimport '@styles/react/libs/editor/editor.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/react/libs/react-select/_react-select.scss'\n\n// ** Function to capitalize the first letter of string\nconst capitalize = string => string.charAt(0).toUpperCase() + string.slice(1)\n\n// ** Modal Header\nconst ModalHeader = props => {\n  // ** Props\n  const { children, store, handleTaskSidebar, setDeleted, deleted, important, setImportant, deleteTask, dispatch } =\n    props\n\n  // ** Function to delete task\n  const handleDeleteTask = () => {\n    setDeleted(!deleted)\n    dispatch(deleteTask(store.selectedTask.id))\n    handleTaskSidebar()\n  }\n\n  return (\n    <div className='modal-header d-flex align-items-center justify-content-between mb-1'>\n      <h5 className='modal-title'>{children}</h5>\n      <div className='todo-item-action d-flex align-items-center'>\n        {store && !isObjEmpty(store.selectedTask) ? (\n          <Trash className='cursor-pointer mt-25' size={16} onClick={() => handleDeleteTask()} />\n        ) : null}\n        <span className='todo-item-favorite cursor-pointer mx-75'>\n          <Star\n            size={16}\n            onClick={() => setImportant(!important)}\n            className={classnames({\n              'text-warning': important === true\n            })}\n          />\n        </span>\n        <X className='fw-normal mt-25' size={16} onClick={handleTaskSidebar} />\n      </div>\n    </div>\n  )\n}\n\nconst TaskSidebar = props => {\n  // ** Props\n  const { open, handleTaskSidebar, store, dispatch, updateTask, selectTask, addTask, deleteTask } = props\n\n  // ** States\n  const [assignee, setAssignee] = useState({ value: 'pheobe', label: 'Pheobe Buffay', img: img1 })\n  const [tags, setTags] = useState([])\n  const [desc, setDesc] = useState(EditorState.createEmpty())\n  const [completed, setCompleted] = useState(false)\n  const [important, setImportant] = useState(false)\n  const [deleted, setDeleted] = useState(false)\n  const [dueDate, setDueDate] = useState(new Date())\n\n  const {\n    control,\n    setError,\n    setValue,\n    clearErrors,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    defaultValues: { title: '' }\n  })\n\n  // ** Assignee Select Options\n  const assigneeOptions = [\n    { value: 'pheobe', label: 'Pheobe Buffay', img: img1 },\n    { value: 'chandler', label: 'Chandler Bing', img: img2 },\n    { value: 'ross', label: 'Ross Geller', img: img3 },\n    { value: 'monica', label: 'Monica Geller', img: img4 },\n    { value: 'joey', label: 'Joey Tribbiani', img: img5 },\n    { value: 'Rachel', label: 'Rachel Green', img: img6 }\n  ]\n\n  // ** Tag Select Options\n  const tagOptions = [\n    { value: 'team', label: 'Team' },\n    { value: 'low', label: 'Low' },\n    { value: 'medium', label: 'Medium' },\n    { value: 'high', label: 'High' },\n    { value: 'update', label: 'Update' }\n  ]\n\n  // ** Custom Assignee Component\n  const AssigneeComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <div className='d-flex align-items-center'>\n          <img className='d-block rounded-circle me-50' src={data.img} height='26' width='26' alt={data.label} />\n          <p className='mb-0'>{data.label}</p>\n        </div>\n      </components.Option>\n    )\n  }\n\n  // ** Returns sidebar title\n  const handleSidebarTitle = () => {\n    if (store && !isObjEmpty(store.selectedTask)) {\n      return (\n        <Button\n          outline\n          size='sm'\n          onClick={() => setCompleted(!completed)}\n          color={completed === true ? 'success' : 'secondary'}\n        >\n          {completed === true ? 'Completed' : 'Mark Complete'}\n        </Button>\n      )\n    } else {\n      return 'Add Task'\n    }\n  }\n\n  // ** Function to run when sidebar opens\n  const handleSidebarOpened = () => {\n    const { selectedTask } = store\n    if (!isObjEmpty(selectedTask)) {\n      setValue('title', selectedTask.title)\n      setCompleted(selectedTask.isCompleted)\n      setImportant(selectedTask.isImportant)\n      setAssignee([\n        {\n          value: selectedTask.assignee.fullName,\n          label: selectedTask.assignee.fullName,\n          img: selectedTask.assignee.avatar\n        }\n      ])\n      setDueDate(selectedTask.dueDate)\n      if (typeof selectedTask.description === 'string') {\n        setDesc(EditorState.createWithContent(ContentState.createFromText(selectedTask.description)))\n      } else {\n        const obj = selectedTask.description._immutable.currentContent.blockMap\n        const property = Object.keys(obj).map(val => val)\n\n        setDesc(EditorState.createWithContent(ContentState.createFromText(obj[property].text)))\n      }\n\n      if (selectedTask.tags.length) {\n        const tags = []\n        selectedTask.tags.map(tag => {\n          tags.push({ value: tag, label: capitalize(tag) })\n        })\n        setTags(tags)\n      }\n    }\n  }\n\n  // ** Function to run when sidebar closes\n  const handleSidebarClosed = () => {\n    setTags([])\n    setDesc('')\n    setValue('title', '')\n    setAssignee({ value: 'pheobe', label: 'Pheobe Buffay', img: img1 })\n    setCompleted(false)\n    setImportant(false)\n    setDueDate(new Date())\n    dispatch(selectTask({}))\n    clearErrors()\n  }\n\n  // ** Function to reset fields\n  const handleResetFields = () => {\n    const descValue = EditorState.createWithContent(ContentState.createFromText(store.selectedTask.description))\n\n    setValue('title', store.selectedTask.title)\n    setDesc(descValue)\n    setCompleted(store.selectedTask.isCompleted)\n    setImportant(store.selectedTask.isImportant)\n    setDeleted(store.selectedTask.isDeleted)\n    setDueDate(store.selectedTask.dueDate)\n    if (store.selectedTask.assignee.fullName !== assignee.label) {\n      setAssignee({\n        value: store.selectedTask.assignee.fullName,\n        label: store.selectedTask.assignee.fullName,\n        img: store.selectedTask.assignee.avatar\n      })\n    }\n    if (store.selectedTask.tags.length) {\n      const tags = []\n      store.selectedTask.tags.map(tag => {\n        tags.push({ value: tag, label: capitalize(tag) })\n      })\n      setTags(tags)\n    }\n  }\n\n  // ** Renders Footer Buttons\n  const renderFooterButtons = () => {\n    if (store && !isObjEmpty(store.selectedTask)) {\n      return (\n        <Fragment>\n          <Button color='primary' className='update-btn update-todo-item me-1'>\n            Update\n          </Button>\n          <Button color='secondary' onClick={handleResetFields} outline>\n            Reset\n          </Button>\n        </Fragment>\n      )\n    } else {\n      return (\n        <Fragment>\n          <Button color='primary' className='add-todo-item me-1'>\n            Add\n          </Button>\n          <Button color='secondary' onClick={handleTaskSidebar} outline>\n            Cancel\n          </Button>\n        </Fragment>\n      )\n    }\n  }\n\n  const onSubmit = data => {\n    const newTaskTag = []\n\n    const doesInclude = !isObjEmpty(store.selectedTask) && assignee.label === store.selectedTask.assignee.fullName\n\n    if (tags.length) {\n      tags.map(tag => newTaskTag.push(tag.value))\n    }\n\n    const newAssignee = {\n      fullName: assignee.label,\n      avatar: assignee.img\n    }\n    const state = {\n      dueDate,\n      title: data.title,\n      tags: newTaskTag,\n      description: desc,\n      isCompleted: completed,\n      isDeleted: deleted,\n      isImportant: important,\n      assignee: doesInclude || assignee.label === undefined ? store.selectedTask.assignee : newAssignee\n    }\n\n    if (data.title.length) {\n      if (isObjEmpty(errors)) {\n        if (isObjEmpty(store.selectedTask) || (!isObjEmpty(store.selectedTask) && !store.selectedTask.title.length)) {\n          dispatch(addTask(state))\n        } else {\n          dispatch(updateTask({ ...state, id: store.selectedTask.id }))\n        }\n        handleTaskSidebar()\n      }\n    } else {\n      setError('title', {\n        type: 'manual'\n      })\n    }\n  }\n  return (\n    <Modal\n      isOpen={open}\n      toggle={handleTaskSidebar}\n      className='sidebar-lg'\n      contentClassName='p-0'\n      onOpened={handleSidebarOpened}\n      onClosed={handleSidebarClosed}\n      modalClassName='modal-slide-in sidebar-todo-modal'\n    >\n      <Form id='form-modal-todo' className='todo-modal' onSubmit={handleSubmit(onSubmit)}>\n        <ModalHeader\n          store={store}\n          deleted={deleted}\n          dispatch={dispatch}\n          important={important}\n          deleteTask={deleteTask}\n          setDeleted={setDeleted}\n          setImportant={setImportant}\n          handleTaskSidebar={handleTaskSidebar}\n        >\n          {handleSidebarTitle()}\n        </ModalHeader>\n        <ModalBody className='flex-grow-1 pb-sm-0 pb-3'>\n          <div className='mb-1'>\n            <Label className='form-label' for='task-title'>\n              Title <span className='text-danger'>*</span>\n            </Label>\n            <Controller\n              name='title'\n              control={control}\n              render={({ field }) => (\n                <Input\n                  id='task-title'\n                  placeholder='Title'\n                  className='new-todo-item-title'\n                  invalid={errors.title && true}\n                  {...field}\n                />\n              )}\n            />\n            {errors.title && <FormFeedback>Please enter a valid task title</FormFeedback>}\n          </div>\n          <div className='mb-1'>\n            <Label className='form-label' for='task-assignee'>\n              Assignee\n            </Label>\n            <Select\n              id='task-assignee'\n              className='react-select'\n              classNamePrefix='select'\n              isClearable={false}\n              options={assigneeOptions}\n              theme={selectThemeColors}\n              value={assignee}\n              onChange={data => setAssignee(data)}\n              components={{ Option: AssigneeComponent }}\n            />\n          </div>\n          <div className='mb-1'>\n            <Label className='form-label' for='due-date'>\n              Due Date\n            </Label>\n            <Flatpickr\n              id='due-date'\n              name='due-date'\n              className='form-control'\n              onChange={date => setDueDate(date[0])}\n              value={dueDate}\n              options={{ dateFormat: 'Y-m-d' }}\n            />\n          </div>\n          <div className='mb-1'>\n            <Label className='form-label' for='task-tags'>\n              Tags\n            </Label>\n            <Select\n              isMulti\n              id='task-tags'\n              className='react-select'\n              classNamePrefix='select'\n              isClearable={false}\n              options={tagOptions}\n              theme={selectThemeColors}\n              value={tags}\n              onChange={data => {\n                setTags(data !== null ? [...data] : [])\n              }}\n            />\n          </div>\n          <div className='mb-1'>\n            <Label for='task-desc' className='form-label'>\n              Description\n            </Label>\n            <Editor\n              editorState={desc}\n              wrapperClassName='toolbar-bottom'\n              toolbar={{\n                options: ['inline', 'textAlign'],\n                inline: {\n                  inDropdown: false,\n                  options: ['bold', 'italic', 'underline']\n                }\n              }}\n              onEditorStateChange={data => setDesc(data)}\n            />\n          </div>\n          <div>{renderFooterButtons()}</div>\n        </ModalBody>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default TaskSidebar\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}